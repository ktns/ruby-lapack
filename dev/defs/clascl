--- 
:name: clascl
:md5sum: fce65101e2bd6b47b1be23e27767bac2
:category: :subroutine
:arguments: 
- type: 
    :type: char
    :intent: input
- kl: 
    :type: integer
    :intent: input
- ku: 
    :type: integer
    :intent: input
- cfrom: 
    :type: real
    :intent: input
- cto: 
    :type: real
    :intent: input
- m: 
    :type: integer
    :intent: input
- n: 
    :type: integer
    :intent: input
- a: 
    :type: complex
    :intent: input/output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE CLASCL( TYPE, KL, KU, CFROM, CTO, M, N, A, LDA, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  CLASCL multiplies the M by N complex matrix A by the real scalar\n\
  *  CTO/CFROM.  This is done without over/underflow as long as the final\n\
  *  result CTO*A(I,J)/CFROM does not over/underflow. TYPE specifies that\n\
  *  A may be full, upper triangular, lower triangular, upper Hessenberg,\n\
  *  or banded.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  TYPE    (input) CHARACTER*1\n\
  *          TYPE indices the storage type of the input matrix.\n\
  *          = 'G':  A is a full matrix.\n\
  *          = 'L':  A is a lower triangular matrix.\n\
  *          = 'U':  A is an upper triangular matrix.\n\
  *          = 'H':  A is an upper Hessenberg matrix.\n\
  *          = 'B':  A is a symmetric band matrix with lower bandwidth KL\n\
  *                  and upper bandwidth KU and with the only the lower\n\
  *                  half stored.\n\
  *          = 'Q':  A is a symmetric band matrix with lower bandwidth KL\n\
  *                  and upper bandwidth KU and with the only the upper\n\
  *                  half stored.\n\
  *          = 'Z':  A is a band matrix with lower bandwidth KL and upper\n\
  *                  bandwidth KU. See CGBTRF for storage details.\n\
  *\n\
  *  KL      (input) INTEGER\n\
  *          The lower bandwidth of A.  Referenced only if TYPE = 'B',\n\
  *          'Q' or 'Z'.\n\
  *\n\
  *  KU      (input) INTEGER\n\
  *          The upper bandwidth of A.  Referenced only if TYPE = 'B',\n\
  *          'Q' or 'Z'.\n\
  *\n\
  *  CFROM   (input) REAL\n\
  *  CTO     (input) REAL\n\
  *          The matrix A is multiplied by CTO/CFROM. A(I,J) is computed\n\
  *          without over/underflow if the final result CTO*A(I,J)/CFROM\n\
  *          can be represented without over/underflow.  CFROM must be\n\
  *          nonzero.\n\
  *\n\
  *  M       (input) INTEGER\n\
  *          The number of rows of the matrix A.  M >= 0.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The number of columns of the matrix A.  N >= 0.\n\
  *\n\
  *  A       (input/output) COMPLEX array, dimension (LDA,N)\n\
  *          The matrix to be multiplied by CTO/CFROM.  See TYPE for the\n\
  *          storage type.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,M).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          0  - successful exit\n\
  *          <0 - if INFO = -i, the i-th argument had an illegal value.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
