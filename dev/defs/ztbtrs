--- 
:name: ztbtrs
:md5sum: f5db47eaff35ac41a9679726933de724
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- trans: 
    :type: char
    :intent: input
- diag: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- kd: 
    :type: integer
    :intent: input
- nrhs: 
    :type: integer
    :intent: input
- ab: 
    :type: doublecomplex
    :intent: input
    :dims: 
    - ldab
    - n
- ldab: 
    :type: integer
    :intent: input
- b: 
    :type: doublecomplex
    :intent: input/output
    :dims: 
    - ldb
    - nrhs
- ldb: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE ZTBTRS( UPLO, TRANS, DIAG, N, KD, NRHS, AB, LDAB, B, LDB, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  ZTBTRS solves a triangular system of the form\n\
  *\n\
  *     A * X = B,  A**T * X = B,  or  A**H * X = B,\n\
  *\n\
  *  where A is a triangular band matrix of order N, and B is an\n\
  *  N-by-NRHS matrix.  A check is made to verify that A is nonsingular.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  A is upper triangular;\n\
  *          = 'L':  A is lower triangular.\n\
  *\n\
  *  TRANS   (input) CHARACTER*1\n\
  *          Specifies the form of the system of equations:\n\
  *          = 'N':  A * X = B     (No transpose)\n\
  *          = 'T':  A**T * X = B  (Transpose)\n\
  *          = 'C':  A**H * X = B  (Conjugate transpose)\n\
  *\n\
  *  DIAG    (input) CHARACTER*1\n\
  *          = 'N':  A is non-unit triangular;\n\
  *          = 'U':  A is unit triangular.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  KD      (input) INTEGER\n\
  *          The number of superdiagonals or subdiagonals of the\n\
  *          triangular band matrix A.  KD >= 0.\n\
  *\n\
  *  NRHS    (input) INTEGER\n\
  *          The number of right hand sides, i.e., the number of columns\n\
  *          of the matrix B.  NRHS >= 0.\n\
  *\n\
  *  AB      (input) COMPLEX*16 array, dimension (LDAB,N)\n\
  *          The upper or lower triangular band matrix A, stored in the\n\
  *          first kd+1 rows of AB.  The j-th column of A is stored\n\
  *          in the j-th column of the array AB as follows:\n\
  *          if UPLO = 'U', AB(kd+1+i-j,j) = A(i,j) for max(1,j-kd)<=i<=j;\n\
  *          if UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j<=i<=min(n,j+kd).\n\
  *          If DIAG = 'U', the diagonal elements of A are not referenced\n\
  *          and are assumed to be 1.\n\
  *\n\
  *  LDAB    (input) INTEGER\n\
  *          The leading dimension of the array AB.  LDAB >= KD+1.\n\
  *\n\
  *  B       (input/output) COMPLEX*16 array, dimension (LDB,NRHS)\n\
  *          On entry, the right hand side matrix B.\n\
  *          On exit, if INFO = 0, the solution matrix X.\n\
  *\n\
  *  LDB     (input) INTEGER\n\
  *          The leading dimension of the array B.  LDB >= max(1,N).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *          > 0:  if INFO = i, the i-th diagonal element of A is zero,\n\
  *                indicating that the matrix is singular and the\n\
  *                solutions X have not been computed.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
