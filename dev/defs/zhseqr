--- 
:name: zhseqr
:md5sum: ef6b85e6bdbf0fa44c0c2503d7c14f6f
:category: :subroutine
:arguments: 
- job: 
    :type: char
    :intent: input
- compz: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- ilo: 
    :type: integer
    :intent: input
- ihi: 
    :type: integer
    :intent: input
- h: 
    :type: doublecomplex
    :intent: input/output
    :dims: 
    - ldh
    - n
- ldh: 
    :type: integer
    :intent: input
- w: 
    :type: doublecomplex
    :intent: output
    :dims: 
    - n
- z: 
    :type: doublecomplex
    :intent: input/output
    :dims: 
    - "lsame_(&compz,\"N\") ? 0 : ldz"
    - "lsame_(&compz,\"N\") ? 0 : n"
- ldz: 
    :type: integer
    :intent: input
- work: 
    :type: doublecomplex
    :intent: output
    :dims: 
    - MAX(1,lwork)
- lwork: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE ZHSEQR( JOB, COMPZ, N, ILO, IHI, H, LDH, W, Z, LDZ, WORK, LWORK, INFO )\n\n\
  *     Purpose\n\
  *     =======\n\
  *\n\
  *     ZHSEQR computes the eigenvalues of a Hessenberg matrix H\n\
  *     and, optionally, the matrices T and Z from the Schur decomposition\n\
  *     H = Z T Z**H, where T is an upper triangular matrix (the\n\
  *     Schur form), and Z is the unitary matrix of Schur vectors.\n\
  *\n\
  *     Optionally Z may be postmultiplied into an input unitary\n\
  *     matrix Q so that this routine can give the Schur factorization\n\
  *     of a matrix A which has been reduced to the Hessenberg form H\n\
  *     by the unitary matrix Q:  A = Q*H*Q**H = (QZ)*H*(QZ)**H.\n\
  *\n\n\
  *     Arguments\n\
  *     =========\n\
  *\n\
  *     JOB   (input) CHARACTER*1\n\
  *           = 'E':  compute eigenvalues only;\n\
  *           = 'S':  compute eigenvalues and the Schur form T.\n\
  *\n\
  *     COMPZ (input) CHARACTER*1\n\
  *           = 'N':  no Schur vectors are computed;\n\
  *           = 'I':  Z is initialized to the unit matrix and the matrix Z\n\
  *                   of Schur vectors of H is returned;\n\
  *           = 'V':  Z must contain an unitary matrix Q on entry, and\n\
  *                   the product Q*Z is returned.\n\
  *\n\
  *     N     (input) INTEGER\n\
  *           The order of the matrix H.  N .GE. 0.\n\
  *\n\
  *     ILO   (input) INTEGER\n\
  *     IHI   (input) INTEGER\n\
  *           It is assumed that H is already upper triangular in rows\n\
  *           and columns 1:ILO-1 and IHI+1:N. ILO and IHI are normally\n\
  *           set by a previous call to ZGEBAL, and then passed to ZGEHRD\n\
  *           when the matrix output by ZGEBAL is reduced to Hessenberg\n\
  *           form. Otherwise ILO and IHI should be set to 1 and N\n\
  *           respectively.  If N.GT.0, then 1.LE.ILO.LE.IHI.LE.N.\n\
  *           If N = 0, then ILO = 1 and IHI = 0.\n\
  *\n\
  *     H     (input/output) COMPLEX*16 array, dimension (LDH,N)\n\
  *           On entry, the upper Hessenberg matrix H.\n\
  *           On exit, if INFO = 0 and JOB = 'S', H contains the upper\n\
  *           triangular matrix T from the Schur decomposition (the\n\
  *           Schur form). If INFO = 0 and JOB = 'E', the contents of\n\
  *           H are unspecified on exit.  (The output value of H when\n\
  *           INFO.GT.0 is given under the description of INFO below.)\n\
  *\n\
  *           Unlike earlier versions of ZHSEQR, this subroutine may\n\
  *           explicitly H(i,j) = 0 for i.GT.j and j = 1, 2, ... ILO-1\n\
  *           or j = IHI+1, IHI+2, ... N.\n\
  *\n\
  *     LDH   (input) INTEGER\n\
  *           The leading dimension of the array H. LDH .GE. max(1,N).\n\
  *\n\
  *     W        (output) COMPLEX*16 array, dimension (N)\n\
  *           The computed eigenvalues. If JOB = 'S', the eigenvalues are\n\
  *           stored in the same order as on the diagonal of the Schur\n\
  *           form returned in H, with W(i) = H(i,i).\n\
  *\n\
  *     Z     (input/output) COMPLEX*16 array, dimension (LDZ,N)\n\
  *           If COMPZ = 'N', Z is not referenced.\n\
  *           If COMPZ = 'I', on entry Z need not be set and on exit,\n\
  *           if INFO = 0, Z contains the unitary matrix Z of the Schur\n\
  *           vectors of H.  If COMPZ = 'V', on entry Z must contain an\n\
  *           N-by-N matrix Q, which is assumed to be equal to the unit\n\
  *           matrix except for the submatrix Z(ILO:IHI,ILO:IHI). On exit,\n\
  *           if INFO = 0, Z contains Q*Z.\n\
  *           Normally Q is the unitary matrix generated by ZUNGHR\n\
  *           after the call to ZGEHRD which formed the Hessenberg matrix\n\
  *           H. (The output value of Z when INFO.GT.0 is given under\n\
  *           the description of INFO below.)\n\
  *\n\
  *     LDZ   (input) INTEGER\n\
  *           The leading dimension of the array Z.  if COMPZ = 'I' or\n\
  *           COMPZ = 'V', then LDZ.GE.MAX(1,N).  Otherwize, LDZ.GE.1.\n\
  *\n\
  *     WORK  (workspace/output) COMPLEX*16 array, dimension (LWORK)\n\
  *           On exit, if INFO = 0, WORK(1) returns an estimate of\n\
  *           the optimal value for LWORK.\n\
  *\n\
  *     LWORK (input) INTEGER\n\
  *           The dimension of the array WORK.  LWORK .GE. max(1,N)\n\
  *           is sufficient and delivers very good and sometimes\n\
  *           optimal performance.  However, LWORK as large as 11*N\n\
  *           may be required for optimal performance.  A workspace\n\
  *           query is recommended to determine the optimal workspace\n\
  *           size.\n\
  *\n\
  *           If LWORK = -1, then ZHSEQR does a workspace query.\n\
  *           In this case, ZHSEQR checks the input parameters and\n\
  *           estimates the optimal workspace size for the given\n\
  *           values of N, ILO and IHI.  The estimate is returned\n\
  *           in WORK(1).  No error message related to LWORK is\n\
  *           issued by XERBLA.  Neither H nor Z are accessed.\n\
  *\n\
  *\n\
  *     INFO  (output) INTEGER\n\
  *             =  0:  successful exit\n\
  *           .LT. 0:  if INFO = -i, the i-th argument had an illegal\n\
  *                    value\n\
  *           .GT. 0:  if INFO = i, ZHSEQR failed to compute all of\n\
  *                the eigenvalues.  Elements 1:ilo-1 and i+1:n of WR\n\
  *                and WI contain those eigenvalues which have been\n\
  *                successfully computed.  (Failures are rare.)\n\
  *\n\
  *                If INFO .GT. 0 and JOB = 'E', then on exit, the\n\
  *                remaining unconverged eigenvalues are the eigen-\n\
  *                values of the upper Hessenberg matrix rows and\n\
  *                columns ILO through INFO of the final, output\n\
  *                value of H.\n\
  *\n\
  *                If INFO .GT. 0 and JOB   = 'S', then on exit\n\
  *\n\
  *           (*)  (initial value of H)*U  = U*(final value of H)\n\
  *\n\
  *                where U is a unitary matrix.  The final\n\
  *                value of  H is upper Hessenberg and triangular in\n\
  *                rows and columns INFO+1 through IHI.\n\
  *\n\
  *                If INFO .GT. 0 and COMPZ = 'V', then on exit\n\
  *\n\
  *                  (final value of Z)  =  (initial value of Z)*U\n\
  *\n\
  *                where U is the unitary matrix in (*) (regard-\n\
  *                less of the value of JOB.)\n\
  *\n\
  *                If INFO .GT. 0 and COMPZ = 'I', then on exit\n\
  *                      (final value of Z)  = U\n\
  *                where U is the unitary matrix in (*) (regard-\n\
  *                less of the value of JOB.)\n\
  *\n\
  *                If INFO .GT. 0 and COMPZ = 'N', then Z is not\n\
  *                accessed.\n\
  *\n\n\
  *     ================================================================\n\
  *             Default values supplied by\n\
  *             ILAENV(ISPEC,'ZHSEQR',JOB(:1)//COMPZ(:1),N,ILO,IHI,LWORK).\n\
  *             It is suggested that these defaults be adjusted in order\n\
  *             to attain best performance in each particular\n\
  *             computational environment.\n\
  *\n\
  *            ISPEC=12: The ZLAHQR vs ZLAQR0 crossover point.\n\
  *                      Default: 75. (Must be at least 11.)\n\
  *\n\
  *            ISPEC=13: Recommended deflation window size.\n\
  *                      This depends on ILO, IHI and NS.  NS is the\n\
  *                      number of simultaneous shifts returned\n\
  *                      by ILAENV(ISPEC=15).  (See ISPEC=15 below.)\n\
  *                      The default for (IHI-ILO+1).LE.500 is NS.\n\
  *                      The default for (IHI-ILO+1).GT.500 is 3*NS/2.\n\
  *\n\
  *            ISPEC=14: Nibble crossover point. (See IPARMQ for\n\
  *                      details.)  Default: 14% of deflation window\n\
  *                      size.\n\
  *\n\
  *            ISPEC=15: Number of simultaneous shifts in a multishift\n\
  *                      QR iteration.\n\
  *\n\
  *                      If IHI-ILO+1 is ...\n\
  *\n\
  *                      greater than      ...but less    ... the\n\
  *                      or equal to ...      than        default is\n\
  *\n\
  *                           1               30          NS =   2(+)\n\
  *                          30               60          NS =   4(+)\n\
  *                          60              150          NS =  10(+)\n\
  *                         150              590          NS =  **\n\
  *                         590             3000          NS =  64\n\
  *                        3000             6000          NS = 128\n\
  *                        6000             infinity      NS = 256\n\
  *\n\
  *                  (+)  By default some or all matrices of this order\n\
  *                       are passed to the implicit double shift routine\n\
  *                       ZLAHQR and this parameter is ignored.  See\n\
  *                       ISPEC=12 above and comments in IPARMQ for\n\
  *                       details.\n\
  *\n\
  *                 (**)  The asterisks (**) indicate an ad-hoc\n\
  *                       function of N increasing from 10 to 64.\n\
  *\n\
  *            ISPEC=16: Select structured matrix multiply.\n\
  *                      If the number of simultaneous shifts (specified\n\
  *                      by ISPEC=15) is less than 14, then the default\n\
  *                      for ISPEC=16 is 0.  Otherwise the default for\n\
  *                      ISPEC=16 is 2.\n\
  *\n\
  *     ================================================================\n\
  *     Based on contributions by\n\
  *        Karen Braman and Ralph Byers, Department of Mathematics,\n\
  *        University of Kansas, USA\n\
  *\n\
  *     ================================================================\n\
  *     References:\n\
  *       K. Braman, R. Byers and R. Mathias, The Multi-Shift QR\n\
  *       Algorithm Part I: Maintaining Well Focused Shifts, and Level 3\n\
  *       Performance, SIAM Journal of Matrix Analysis, volume 23, pages\n\
  *       929--947, 2002.\n\
  *\n\
  *       K. Braman, R. Byers and R. Mathias, The Multi-Shift QR\n\
  *       Algorithm Part II: Aggressive Early Deflation, SIAM Journal\n\
  *       of Matrix Analysis, volume 23, pages 948--973, 2002.\n\
  *\n\
  *     ================================================================\n"
