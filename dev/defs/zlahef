--- 
:name: zlahef
:md5sum: 43bf4f4327aedf5ca806b99215ebff6b
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- nb: 
    :type: integer
    :intent: input
- kb: 
    :type: integer
    :intent: output
- a: 
    :type: doublecomplex
    :intent: input/output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- ipiv: 
    :type: integer
    :intent: output
    :dims: 
    - n
- w: 
    :type: doublecomplex
    :intent: workspace
    :dims: 
    - ldw
    - MAX(n,nb)
- ldw: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: 
  ldw: MAX(1,n)
:fortran_help: "      SUBROUTINE ZLAHEF( UPLO, N, NB, KB, A, LDA, IPIV, W, LDW, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  ZLAHEF computes a partial factorization of a complex Hermitian\n\
  *  matrix A using the Bunch-Kaufman diagonal pivoting method. The\n\
  *  partial factorization has the form:\n\
  *\n\
  *  A  =  ( I  U12 ) ( A11  0  ) (  I    0   )  if UPLO = 'U', or:\n\
  *        ( 0  U22 ) (  0   D  ) ( U12' U22' )\n\
  *\n\
  *  A  =  ( L11  0 ) (  D   0  ) ( L11' L21' )  if UPLO = 'L'\n\
  *        ( L21  I ) (  0  A22 ) (  0    I   )\n\
  *\n\
  *  where the order of D is at most NB. The actual order is returned in\n\
  *  the argument KB, and is either NB or NB-1, or N if N <= NB.\n\
  *  Note that U' denotes the conjugate transpose of U.\n\
  *\n\
  *  ZLAHEF is an auxiliary routine called by ZHETRF. It uses blocked code\n\
  *  (calling Level 3 BLAS) to update the submatrix A11 (if UPLO = 'U') or\n\
  *  A22 (if UPLO = 'L').\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          Specifies whether the upper or lower triangular part of the\n\
  *          Hermitian matrix A is stored:\n\
  *          = 'U':  Upper triangular\n\
  *          = 'L':  Lower triangular\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  NB      (input) INTEGER\n\
  *          The maximum number of columns of the matrix A that should be\n\
  *          factored.  NB should be at least 2 to allow for 2-by-2 pivot\n\
  *          blocks.\n\
  *\n\
  *  KB      (output) INTEGER\n\
  *          The number of columns of A that were actually factored.\n\
  *          KB is either NB-1 or NB, or N if N <= NB.\n\
  *\n\
  *  A       (input/output) COMPLEX*16 array, dimension (LDA,N)\n\
  *          On entry, the Hermitian matrix A.  If UPLO = 'U', the leading\n\
  *          n-by-n upper triangular part of A contains the upper\n\
  *          triangular part of the matrix A, and the strictly lower\n\
  *          triangular part of A is not referenced.  If UPLO = 'L', the\n\
  *          leading n-by-n lower triangular part of A contains the lower\n\
  *          triangular part of the matrix A, and the strictly upper\n\
  *          triangular part of A is not referenced.\n\
  *          On exit, A contains details of the partial factorization.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,N).\n\
  *\n\
  *  IPIV    (output) INTEGER array, dimension (N)\n\
  *          Details of the interchanges and the block structure of D.\n\
  *          If UPLO = 'U', only the last KB elements of IPIV are set;\n\
  *          if UPLO = 'L', only the first KB elements are set.\n\
  *\n\
  *          If IPIV(k) > 0, then rows and columns k and IPIV(k) were\n\
  *          interchanged and D(k,k) is a 1-by-1 diagonal block.\n\
  *          If UPLO = 'U' and IPIV(k) = IPIV(k-1) < 0, then rows and\n\
  *          columns k-1 and -IPIV(k) were interchanged and D(k-1:k,k-1:k)\n\
  *          is a 2-by-2 diagonal block.  If UPLO = 'L' and IPIV(k) =\n\
  *          IPIV(k+1) < 0, then rows and columns k+1 and -IPIV(k) were\n\
  *          interchanged and D(k:k+1,k:k+1) is a 2-by-2 diagonal block.\n\
  *\n\
  *  W       (workspace) COMPLEX*16 array, dimension (LDW,NB)\n\
  *\n\
  *  LDW     (input) INTEGER\n\
  *          The leading dimension of the array W.  LDW >= max(1,N).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0: successful exit\n\
  *          > 0: if INFO = k, D(k,k) is exactly zero.  The factorization\n\
  *               has been completed, but the block diagonal matrix D is\n\
  *               exactly singular.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
