--- 
:name: ctpcon
:md5sum: 23dc10d29cb244e7abee807ca79e6757
:category: :subroutine
:arguments: 
- norm: 
    :type: char
    :intent: input
- uplo: 
    :type: char
    :intent: input
- diag: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- ap: 
    :type: complex
    :intent: input
    :dims: 
    - ldap
- rcond: 
    :type: real
    :intent: output
- work: 
    :type: complex
    :intent: workspace
    :dims: 
    - 2*n
- rwork: 
    :type: real
    :intent: workspace
    :dims: 
    - n
- info: 
    :type: integer
    :intent: output
:substitutions: 
  n: ((int)sqrtf(ldap*8+1.0f)-1)/2
:fortran_help: "      SUBROUTINE CTPCON( NORM, UPLO, DIAG, N, AP, RCOND, WORK, RWORK, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  CTPCON estimates the reciprocal of the condition number of a packed\n\
  *  triangular matrix A, in either the 1-norm or the infinity-norm.\n\
  *\n\
  *  The norm of A is computed and an estimate is obtained for\n\
  *  norm(inv(A)), then the reciprocal of the condition number is\n\
  *  computed as\n\
  *     RCOND = 1 / ( norm(A) * norm(inv(A)) ).\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  NORM    (input) CHARACTER*1\n\
  *          Specifies whether the 1-norm condition number or the\n\
  *          infinity-norm condition number is required:\n\
  *          = '1' or 'O':  1-norm;\n\
  *          = 'I':         Infinity-norm.\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  A is upper triangular;\n\
  *          = 'L':  A is lower triangular.\n\
  *\n\
  *  DIAG    (input) CHARACTER*1\n\
  *          = 'N':  A is non-unit triangular;\n\
  *          = 'U':  A is unit triangular.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  AP      (input) COMPLEX array, dimension (N*(N+1)/2)\n\
  *          The upper or lower triangular matrix A, packed columnwise in\n\
  *          a linear array.  The j-th column of A is stored in the array\n\
  *          AP as follows:\n\
  *          if UPLO = 'U', AP(i + (j-1)*j/2) = A(i,j) for 1<=i<=j;\n\
  *          if UPLO = 'L', AP(i + (j-1)*(2n-j)/2) = A(i,j) for j<=i<=n.\n\
  *          If DIAG = 'U', the diagonal elements of A are not referenced\n\
  *          and are assumed to be 1.\n\
  *\n\
  *  RCOND   (output) REAL\n\
  *          The reciprocal of the condition number of the matrix A,\n\
  *          computed as RCOND = 1/(norm(A) * norm(inv(A))).\n\
  *\n\
  *  WORK    (workspace) COMPLEX array, dimension (2*N)\n\
  *\n\
  *  RWORK   (workspace) REAL array, dimension (N)\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
