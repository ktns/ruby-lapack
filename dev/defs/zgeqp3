--- 
:name: zgeqp3
:md5sum: 4e5e3c299fc7580a41a9e5a83aa4402d
:category: :subroutine
:arguments: 
- m: 
    :type: integer
    :intent: input
- n: 
    :type: integer
    :intent: input
- a: 
    :type: doublecomplex
    :intent: input/output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- jpvt: 
    :type: integer
    :intent: input/output
    :dims: 
    - n
- tau: 
    :type: doublecomplex
    :intent: output
    :dims: 
    - MIN(m,n)
- work: 
    :type: doublecomplex
    :intent: output
    :dims: 
    - MAX(1,lwork)
- lwork: 
    :type: integer
    :intent: input
- rwork: 
    :type: doublereal
    :intent: workspace
    :dims: 
    - 2*n
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE ZGEQP3( M, N, A, LDA, JPVT, TAU, WORK, LWORK, RWORK, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  ZGEQP3 computes a QR factorization with column pivoting of a\n\
  *  matrix A:  A*P = Q*R  using Level 3 BLAS.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  M       (input) INTEGER\n\
  *          The number of rows of the matrix A. M >= 0.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The number of columns of the matrix A.  N >= 0.\n\
  *\n\
  *  A       (input/output) COMPLEX*16 array, dimension (LDA,N)\n\
  *          On entry, the M-by-N matrix A.\n\
  *          On exit, the upper triangle of the array contains the\n\
  *          min(M,N)-by-N upper trapezoidal matrix R; the elements below\n\
  *          the diagonal, together with the array TAU, represent the\n\
  *          unitary matrix Q as a product of min(M,N) elementary\n\
  *          reflectors.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A. LDA >= max(1,M).\n\
  *\n\
  *  JPVT    (input/output) INTEGER array, dimension (N)\n\
  *          On entry, if JPVT(J).ne.0, the J-th column of A is permuted\n\
  *          to the front of A*P (a leading column); if JPVT(J)=0,\n\
  *          the J-th column of A is a free column.\n\
  *          On exit, if JPVT(J)=K, then the J-th column of A*P was the\n\
  *          the K-th column of A.\n\
  *\n\
  *  TAU     (output) COMPLEX*16 array, dimension (min(M,N))\n\
  *          The scalar factors of the elementary reflectors.\n\
  *\n\
  *  WORK    (workspace/output) COMPLEX*16 array, dimension (MAX(1,LWORK))\n\
  *          On exit, if INFO=0, WORK(1) returns the optimal LWORK.\n\
  *\n\
  *  LWORK   (input) INTEGER\n\
  *          The dimension of the array WORK. LWORK >= N+1.\n\
  *          For optimal performance LWORK >= ( N+1 )*NB, where NB\n\
  *          is the optimal blocksize.\n\
  *\n\
  *          If LWORK = -1, then a workspace query is assumed; the routine\n\
  *          only calculates the optimal size of the WORK array, returns\n\
  *          this value as the first entry of the WORK array, and no error\n\
  *          message related to LWORK is issued by XERBLA.\n\
  *\n\
  *  RWORK   (workspace) DOUBLE PRECISION array, dimension (2*N)\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0: successful exit.\n\
  *          < 0: if INFO = -i, the i-th argument had an illegal value.\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  The matrix Q is represented as a product of elementary reflectors\n\
  *\n\
  *     Q = H(1) H(2) . . . H(k), where k = min(m,n).\n\
  *\n\
  *  Each H(i) has the form\n\
  *\n\
  *     H(i) = I - tau * v * v'\n\
  *\n\
  *  where tau is a real/complex scalar, and v is a real/complex vector\n\
  *  with v(1:i-1) = 0 and v(i) = 1; v(i+1:m) is stored on exit in\n\
  *  A(i+1:m,i), and tau in TAU(i).\n\
  *\n\
  *  Based on contributions by\n\
  *    G. Quintana-Orti, Depto. de Informatica, Universidad Jaime I, Spain\n\
  *    X. Sun, Computer Science Dept., Duke University, USA\n\
  *\n\
  *  =====================================================================\n\
  *\n"
