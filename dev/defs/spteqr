--- 
:name: spteqr
:md5sum: 602a7d1d94751729b99e8b4b6eb7a9b3
:category: :subroutine
:arguments: 
- compz: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- d: 
    :type: real
    :intent: input/output
    :dims: 
    - n
- e: 
    :type: real
    :intent: input/output
    :dims: 
    - n-1
- z: 
    :type: real
    :intent: input/output
    :dims: 
    - ldz
    - n
- ldz: 
    :type: integer
    :intent: input
- work: 
    :type: real
    :intent: workspace
    :dims: 
    - 4*n
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE SPTEQR( COMPZ, N, D, E, Z, LDZ, WORK, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  SPTEQR computes all eigenvalues and, optionally, eigenvectors of a\n\
  *  symmetric positive definite tridiagonal matrix by first factoring the\n\
  *  matrix using SPTTRF, and then calling SBDSQR to compute the singular\n\
  *  values of the bidiagonal factor.\n\
  *\n\
  *  This routine computes the eigenvalues of the positive definite\n\
  *  tridiagonal matrix to high relative accuracy.  This means that if the\n\
  *  eigenvalues range over many orders of magnitude in size, then the\n\
  *  small eigenvalues and corresponding eigenvectors will be computed\n\
  *  more accurately than, for example, with the standard QR method.\n\
  *\n\
  *  The eigenvectors of a full or band symmetric positive definite matrix\n\
  *  can also be found if SSYTRD, SSPTRD, or SSBTRD has been used to\n\
  *  reduce this matrix to tridiagonal form. (The reduction to tridiagonal\n\
  *  form, however, may preclude the possibility of obtaining high\n\
  *  relative accuracy in the small eigenvalues of the original matrix, if\n\
  *  these eigenvalues range over many orders of magnitude.)\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  COMPZ   (input) CHARACTER*1\n\
  *          = 'N':  Compute eigenvalues only.\n\
  *          = 'V':  Compute eigenvectors of original symmetric\n\
  *                  matrix also.  Array Z contains the orthogonal\n\
  *                  matrix used to reduce the original matrix to\n\
  *                  tridiagonal form.\n\
  *          = 'I':  Compute eigenvectors of tridiagonal matrix also.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix.  N >= 0.\n\
  *\n\
  *  D       (input/output) REAL array, dimension (N)\n\
  *          On entry, the n diagonal elements of the tridiagonal\n\
  *          matrix.\n\
  *          On normal exit, D contains the eigenvalues, in descending\n\
  *          order.\n\
  *\n\
  *  E       (input/output) REAL array, dimension (N-1)\n\
  *          On entry, the (n-1) subdiagonal elements of the tridiagonal\n\
  *          matrix.\n\
  *          On exit, E has been destroyed.\n\
  *\n\
  *  Z       (input/output) REAL array, dimension (LDZ, N)\n\
  *          On entry, if COMPZ = 'V', the orthogonal matrix used in the\n\
  *          reduction to tridiagonal form.\n\
  *          On exit, if COMPZ = 'V', the orthonormal eigenvectors of the\n\
  *          original symmetric matrix;\n\
  *          if COMPZ = 'I', the orthonormal eigenvectors of the\n\
  *          tridiagonal matrix.\n\
  *          If INFO > 0 on exit, Z contains the eigenvectors associated\n\
  *          with only the stored eigenvalues.\n\
  *          If  COMPZ = 'N', then Z is not referenced.\n\
  *\n\
  *  LDZ     (input) INTEGER\n\
  *          The leading dimension of the array Z.  LDZ >= 1, and if\n\
  *          COMPZ = 'V' or 'I', LDZ >= max(1,N).\n\
  *\n\
  *  WORK    (workspace) REAL array, dimension (4*N)\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit.\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value.\n\
  *          > 0:  if INFO = i, and i is:\n\
  *                <= N  the Cholesky factorization of the matrix could\n\
  *                      not be performed because the i-th principal minor\n\
  *                      was not positive definite.\n\
  *                > N   the SVD algorithm failed to converge;\n\
  *                      if INFO = N+i, i off-diagonal elements of the\n\
  *                      bidiagonal factor did not converge to zero.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
