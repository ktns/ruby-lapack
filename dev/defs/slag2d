--- 
:name: slag2d
:md5sum: 66ca6fd237c1f18d65be3a3235538d2d
:category: :subroutine
:arguments: 
- m: 
    :type: integer
    :intent: input
- n: 
    :type: integer
    :intent: input
- sa: 
    :type: real
    :intent: input
    :dims: 
    - ldsa
    - n
- ldsa: 
    :type: integer
    :intent: input
- a: 
    :type: doublereal
    :intent: output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: 
  lda: MAX(1,m)
:fortran_help: "      SUBROUTINE SLAG2D( M, N, SA, LDSA, A, LDA, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  SLAG2D converts a SINGLE PRECISION matrix, SA, to a DOUBLE\n\
  *  PRECISION matrix, A.\n\
  *\n\
  *  Note that while it is possible to overflow while converting\n\
  *  from double to single, it is not possible to overflow when\n\
  *  converting from single to double.\n\
  *\n\
  *  This is an auxiliary routine so there is no argument checking.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  M       (input) INTEGER\n\
  *          The number of lines of the matrix A.  M >= 0.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The number of columns of the matrix A.  N >= 0.\n\
  *\n\
  *  SA      (input) REAL array, dimension (LDSA,N)\n\
  *          On entry, the M-by-N coefficient matrix SA.\n\
  *\n\
  *  LDSA    (input) INTEGER\n\
  *          The leading dimension of the array SA.  LDSA >= max(1,M).\n\
  *\n\
  *  A       (output) DOUBLE PRECISION array, dimension (LDA,N)\n\
  *          On exit, the M-by-N coefficient matrix A.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,M).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *  =========\n\
  *\n\
  *     .. Local Scalars ..\n      INTEGER            I, J\n\
  *     ..\n"
