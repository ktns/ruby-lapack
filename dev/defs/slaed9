--- 
:name: slaed9
:md5sum: 19d8d043e908de337edab6e6515b3c83
:category: :subroutine
:arguments: 
- k: 
    :type: integer
    :intent: input
- kstart: 
    :type: integer
    :intent: input
- kstop: 
    :type: integer
    :intent: input
- n: 
    :type: integer
    :intent: input
- d: 
    :type: real
    :intent: output
    :dims: 
    - MAX(1,n)
- q: 
    :type: real
    :intent: workspace
    :dims: 
    - ldq
    - MAX(1,n)
- ldq: 
    :type: integer
    :intent: input
- rho: 
    :type: real
    :intent: input
- dlamda: 
    :type: real
    :intent: input
    :dims: 
    - k
- w: 
    :type: real
    :intent: input
    :dims: 
    - k
- s: 
    :type: real
    :intent: output
    :dims: 
    - lds
    - k
- lds: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: 
  ldq: MAX( 1, n )
  lds: MAX( 1, k )
:fortran_help: "      SUBROUTINE SLAED9( K, KSTART, KSTOP, N, D, Q, LDQ, RHO, DLAMDA, W, S, LDS, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  SLAED9 finds the roots of the secular equation, as defined by the\n\
  *  values in D, Z, and RHO, between KSTART and KSTOP.  It makes the\n\
  *  appropriate calls to SLAED4 and then stores the new matrix of\n\
  *  eigenvectors for use in calculating the next level of Z vectors.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  K       (input) INTEGER\n\
  *          The number of terms in the rational function to be solved by\n\
  *          SLAED4.  K >= 0.\n\
  *\n\
  *  KSTART  (input) INTEGER\n\
  *  KSTOP   (input) INTEGER\n\
  *          The updated eigenvalues Lambda(I), KSTART <= I <= KSTOP\n\
  *          are to be computed.  1 <= KSTART <= KSTOP <= K.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The number of rows and columns in the Q matrix.\n\
  *          N >= K (delation may result in N > K).\n\
  *\n\
  *  D       (output) REAL array, dimension (N)\n\
  *          D(I) contains the updated eigenvalues\n\
  *          for KSTART <= I <= KSTOP.\n\
  *\n\
  *  Q       (workspace) REAL array, dimension (LDQ,N)\n\
  *\n\
  *  LDQ     (input) INTEGER\n\
  *          The leading dimension of the array Q.  LDQ >= max( 1, N ).\n\
  *\n\
  *  RHO     (input) REAL\n\
  *          The value of the parameter in the rank one update equation.\n\
  *          RHO >= 0 required.\n\
  *\n\
  *  DLAMDA  (input) REAL array, dimension (K)\n\
  *          The first K elements of this array contain the old roots\n\
  *          of the deflated updating problem.  These are the poles\n\
  *          of the secular equation.\n\
  *\n\
  *  W       (input) REAL array, dimension (K)\n\
  *          The first K elements of this array contain the components\n\
  *          of the deflation-adjusted updating vector.\n\
  *\n\
  *  S       (output) REAL array, dimension (LDS, K)\n\
  *          Will contain the eigenvectors of the repaired matrix which\n\
  *          will be stored for subsequent Z vector calculation and\n\
  *          multiplied by the previously accumulated eigenvectors\n\
  *          to update the system.\n\
  *\n\
  *  LDS     (input) INTEGER\n\
  *          The leading dimension of S.  LDS >= max( 1, K ).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit.\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value.\n\
  *          > 0:  if INFO = 1, an eigenvalue did not converge\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  Based on contributions by\n\
  *     Jeff Rutter, Computer Science Division, University of California\n\
  *     at Berkeley, USA\n\
  *\n\
  *  =====================================================================\n\
  *\n\
  *     .. Local Scalars ..\n      INTEGER            I, J\n      REAL               TEMP\n\
  *     ..\n\
  *     .. External Functions ..\n      REAL               SLAMC3, SNRM2\n      EXTERNAL           SLAMC3, SNRM2\n\
  *     ..\n\
  *     .. External Subroutines ..\n      EXTERNAL           SCOPY, SLAED4, XERBLA\n\
  *     ..\n\
  *     .. Intrinsic Functions ..\n      INTRINSIC          MAX, SIGN, SQRT\n\
  *     ..\n"
