--- 
:name: stpttr
:md5sum: 9c07897dfa04ac8ad6c902bcba53ac0d
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- ap: 
    :type: real
    :intent: input
    :dims: 
    - ldap
- a: 
    :type: real
    :intent: output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: 
  lda: MAX(1,n)
  n: ((int)sqrtf(ldap*8+1.0f)-1)/2
:fortran_help: "      SUBROUTINE STPTTR( UPLO, N, AP, A, LDA, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  STPTTR copies a triangular matrix A from standard packed format (TP)\n\
  *  to standard full format (TR).\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  A is upper triangular.\n\
  *          = 'L':  A is lower triangular.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A. N >= 0.\n\
  *\n\
  *  AP      (input) REAL array, dimension ( N*(N+1)/2 ),\n\
  *          On entry, the upper or lower triangular matrix A, packed\n\
  *          columnwise in a linear array. The j-th column of A is stored\n\
  *          in the array AP as follows:\n\
  *          if UPLO = 'U', AP(i + (j-1)*j/2) = A(i,j) for 1<=i<=j;\n\
  *          if UPLO = 'L', AP(i + (j-1)*(2n-j)/2) = A(i,j) for j<=i<=n.\n\
  *\n\
  *  A       (output) REAL array, dimension ( LDA, N )\n\
  *          On exit, the triangular matrix A.  If UPLO = 'U', the leading\n\
  *          N-by-N upper triangular part of A contains the upper\n\
  *          triangular part of the matrix A, and the strictly lower\n\
  *          triangular part of A is not referenced.  If UPLO = 'L', the\n\
  *          leading N-by-N lower triangular part of A contains the lower\n\
  *          triangular part of the matrix A, and the strictly upper\n\
  *          triangular part of A is not referenced.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,N).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
