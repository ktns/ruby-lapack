--- 
:name: ssyev
:md5sum: b3e09603e880a722d95069c7c92b63df
:category: :subroutine
:arguments: 
- jobz: 
    :type: char
    :intent: input
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- a: 
    :type: real
    :intent: input/output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- w: 
    :type: real
    :intent: output
    :dims: 
    - n
- work: 
    :type: real
    :intent: output
    :dims: 
    - MAX(1,lwork)
- lwork: 
    :type: integer
    :intent: input
    :option: true
    :default: 3*n-1
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE SSYEV( JOBZ, UPLO, N, A, LDA, W, WORK, LWORK, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  SSYEV computes all eigenvalues and, optionally, eigenvectors of a\n\
  *  real symmetric matrix A.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  JOBZ    (input) CHARACTER*1\n\
  *          = 'N':  Compute eigenvalues only;\n\
  *          = 'V':  Compute eigenvalues and eigenvectors.\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  Upper triangle of A is stored;\n\
  *          = 'L':  Lower triangle of A is stored.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  A       (input/output) REAL array, dimension (LDA, N)\n\
  *          On entry, the symmetric matrix A.  If UPLO = 'U', the\n\
  *          leading N-by-N upper triangular part of A contains the\n\
  *          upper triangular part of the matrix A.  If UPLO = 'L',\n\
  *          the leading N-by-N lower triangular part of A contains\n\
  *          the lower triangular part of the matrix A.\n\
  *          On exit, if JOBZ = 'V', then if INFO = 0, A contains the\n\
  *          orthonormal eigenvectors of the matrix A.\n\
  *          If JOBZ = 'N', then on exit the lower triangle (if UPLO='L')\n\
  *          or the upper triangle (if UPLO='U') of A, including the\n\
  *          diagonal, is destroyed.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,N).\n\
  *\n\
  *  W       (output) REAL array, dimension (N)\n\
  *          If INFO = 0, the eigenvalues in ascending order.\n\
  *\n\
  *  WORK    (workspace/output) REAL array, dimension (MAX(1,LWORK))\n\
  *          On exit, if INFO = 0, WORK(1) returns the optimal LWORK.\n\
  *\n\
  *  LWORK   (input) INTEGER\n\
  *          The length of the array WORK.  LWORK >= max(1,3*N-1).\n\
  *          For optimal efficiency, LWORK >= (NB+2)*N,\n\
  *          where NB is the blocksize for SSYTRD returned by ILAENV.\n\
  *\n\
  *          If LWORK = -1, then a workspace query is assumed; the routine\n\
  *          only calculates the optimal size of the WORK array, returns\n\
  *          this value as the first entry of the WORK array, and no error\n\
  *          message related to LWORK is issued by XERBLA.\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *          > 0:  if INFO = i, the algorithm failed to converge; i\n\
  *                off-diagonal elements of an intermediate tridiagonal\n\
  *                form did not converge to zero.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
