--- 
:name: sorgtr
:md5sum: c7c50b630620062c901712667ebb5d59
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- a: 
    :type: real
    :intent: input/output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- tau: 
    :type: real
    :intent: input
    :dims: 
    - n-1
- work: 
    :type: real
    :intent: output
    :dims: 
    - MAX(1,lwork)
- lwork: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE SORGTR( UPLO, N, A, LDA, TAU, WORK, LWORK, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  SORGTR generates a real orthogonal matrix Q which is defined as the\n\
  *  product of n-1 elementary reflectors of order N, as returned by\n\
  *  SSYTRD:\n\
  *\n\
  *  if UPLO = 'U', Q = H(n-1) . . . H(2) H(1),\n\
  *\n\
  *  if UPLO = 'L', Q = H(1) H(2) . . . H(n-1).\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U': Upper triangle of A contains elementary reflectors\n\
  *                 from SSYTRD;\n\
  *          = 'L': Lower triangle of A contains elementary reflectors\n\
  *                 from SSYTRD.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix Q. N >= 0.\n\
  *\n\
  *  A       (input/output) REAL array, dimension (LDA,N)\n\
  *          On entry, the vectors which define the elementary reflectors,\n\
  *          as returned by SSYTRD.\n\
  *          On exit, the N-by-N orthogonal matrix Q.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A. LDA >= max(1,N).\n\
  *\n\
  *  TAU     (input) REAL array, dimension (N-1)\n\
  *          TAU(i) must contain the scalar factor of the elementary\n\
  *          reflector H(i), as returned by SSYTRD.\n\
  *\n\
  *  WORK    (workspace/output) REAL array, dimension (MAX(1,LWORK))\n\
  *          On exit, if INFO = 0, WORK(1) returns the optimal LWORK.\n\
  *\n\
  *  LWORK   (input) INTEGER\n\
  *          The dimension of the array WORK. LWORK >= max(1,N-1).\n\
  *          For optimum performance LWORK >= (N-1)*NB, where NB is\n\
  *          the optimal blocksize.\n\
  *\n\
  *          If LWORK = -1, then a workspace query is assumed; the routine\n\
  *          only calculates the optimal size of the WORK array, returns\n\
  *          this value as the first entry of the WORK array, and no error\n\
  *          message related to LWORK is issued by XERBLA.\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
