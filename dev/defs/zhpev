--- 
:name: zhpev
:md5sum: 29948d79784f28856fc93f9c14691050
:category: :subroutine
:arguments: 
- jobz: 
    :type: char
    :intent: input
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- ap: 
    :type: doublecomplex
    :intent: input/output
    :dims: 
    - ldap
- w: 
    :type: doublereal
    :intent: output
    :dims: 
    - n
- z: 
    :type: doublecomplex
    :intent: output
    :dims: 
    - ldz
    - n
- ldz: 
    :type: integer
    :intent: input
- work: 
    :type: doublecomplex
    :intent: workspace
    :dims: 
    - MAX(1, 2*n-1)
- rwork: 
    :type: doublereal
    :intent: workspace
    :dims: 
    - MAX(1, 3*n-2)
- info: 
    :type: integer
    :intent: output
:substitutions: 
  ldz: "lsame_(&jobz,\"V\") ? MAX(1,n) : 1"
  n: ((int)sqrtf(ldap*8+1.0f)-1)/2
:fortran_help: "      SUBROUTINE ZHPEV( JOBZ, UPLO, N, AP, W, Z, LDZ, WORK, RWORK, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  ZHPEV computes all the eigenvalues and, optionally, eigenvectors of a\n\
  *  complex Hermitian matrix in packed storage.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  JOBZ    (input) CHARACTER*1\n\
  *          = 'N':  Compute eigenvalues only;\n\
  *          = 'V':  Compute eigenvalues and eigenvectors.\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  Upper triangle of A is stored;\n\
  *          = 'L':  Lower triangle of A is stored.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  AP      (input/output) COMPLEX*16 array, dimension (N*(N+1)/2)\n\
  *          On entry, the upper or lower triangle of the Hermitian matrix\n\
  *          A, packed columnwise in a linear array.  The j-th column of A\n\
  *          is stored in the array AP as follows:\n\
  *          if UPLO = 'U', AP(i + (j-1)*j/2) = A(i,j) for 1<=i<=j;\n\
  *          if UPLO = 'L', AP(i + (j-1)*(2*n-j)/2) = A(i,j) for j<=i<=n.\n\
  *\n\
  *          On exit, AP is overwritten by values generated during the\n\
  *          reduction to tridiagonal form.  If UPLO = 'U', the diagonal\n\
  *          and first superdiagonal of the tridiagonal matrix T overwrite\n\
  *          the corresponding elements of A, and if UPLO = 'L', the\n\
  *          diagonal and first subdiagonal of T overwrite the\n\
  *          corresponding elements of A.\n\
  *\n\
  *  W       (output) DOUBLE PRECISION array, dimension (N)\n\
  *          If INFO = 0, the eigenvalues in ascending order.\n\
  *\n\
  *  Z       (output) COMPLEX*16 array, dimension (LDZ, N)\n\
  *          If JOBZ = 'V', then if INFO = 0, Z contains the orthonormal\n\
  *          eigenvectors of the matrix A, with the i-th column of Z\n\
  *          holding the eigenvector associated with W(i).\n\
  *          If JOBZ = 'N', then Z is not referenced.\n\
  *\n\
  *  LDZ     (input) INTEGER\n\
  *          The leading dimension of the array Z.  LDZ >= 1, and if\n\
  *          JOBZ = 'V', LDZ >= max(1,N).\n\
  *\n\
  *  WORK    (workspace) COMPLEX*16 array, dimension (max(1, 2*N-1))\n\
  *\n\
  *  RWORK   (workspace) DOUBLE PRECISION array, dimension (max(1, 3*N-2))\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit.\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value.\n\
  *          > 0:  if INFO = i, the algorithm failed to converge; i\n\
  *                off-diagonal elements of an intermediate tridiagonal\n\
  *                form did not converge to zero.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
