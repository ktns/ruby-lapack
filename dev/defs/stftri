--- 
:name: stftri
:md5sum: 8257ba2b58870bddeb55353c065e8aa5
:category: :subroutine
:arguments: 
- transr: 
    :type: char
    :intent: input
- uplo: 
    :type: char
    :intent: input
- diag: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- a: 
    :type: real
    :intent: input/output
    :dims: 
    - n*(n+1)/2
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE STFTRI( TRANSR, UPLO, DIAG, N, A, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  STFTRI computes the inverse of a triangular matrix A stored in RFP\n\
  *  format.\n\
  *\n\
  *  This is a Level 3 BLAS version of the algorithm.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  TRANSR    (input) CHARACTER*1\n\
  *          = 'N':  The Normal TRANSR of RFP A is stored;\n\
  *          = 'T':  The Transpose TRANSR of RFP A is stored.\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  A is upper triangular;\n\
  *          = 'L':  A is lower triangular.\n\
  *\n\
  *  DIAG    (input) CHARACTER*1\n\
  *          = 'N':  A is non-unit triangular;\n\
  *          = 'U':  A is unit triangular.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  A       (input/output) REAL array, dimension (NT);\n\
  *          NT=N*(N+1)/2. On entry, the triangular factor of a Hermitian\n\
  *          Positive Definite matrix A in RFP format. RFP format is\n\
  *          described by TRANSR, UPLO, and N as follows: If TRANSR = 'N'\n\
  *          then RFP A is (0:N,0:k-1) when N is even; k=N/2. RFP A is\n\
  *          (0:N-1,0:k) when N is odd; k=N/2. IF TRANSR = 'T' then RFP is\n\
  *          the transpose of RFP A as defined when\n\
  *          TRANSR = 'N'. The contents of RFP A are defined by UPLO as\n\
  *          follows: If UPLO = 'U' the RFP A contains the nt elements of\n\
  *          upper packed A; If UPLO = 'L' the RFP A contains the nt\n\
  *          elements of lower packed A. The LDA of RFP A is (N+1)/2 when\n\
  *          TRANSR = 'T'. When TRANSR is 'N' the LDA is N+1 when N is\n\
  *          even and N is odd. See the Note below for more details.\n\
  *\n\
  *          On exit, the (triangular) inverse of the original matrix, in\n\
  *          the same storage format.\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0: successful exit\n\
  *          < 0: if INFO = -i, the i-th argument had an illegal value\n\
  *          > 0: if INFO = i, A(i,i) is exactly zero.  The triangular\n\
  *               matrix is singular and its inverse can not be computed.\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  We first consider Rectangular Full Packed (RFP) Format when N is\n\
  *  even. We give an example where N = 6.\n\
  *\n\
  *      AP is Upper             AP is Lower\n\
  *\n\
  *   00 01 02 03 04 05       00\n\
  *      11 12 13 14 15       10 11\n\
  *         22 23 24 25       20 21 22\n\
  *            33 34 35       30 31 32 33\n\
  *               44 45       40 41 42 43 44\n\
  *                  55       50 51 52 53 54 55\n\
  *\n\
  *\n\
  *  Let TRANSR = 'N'. RFP holds AP as follows:\n\
  *  For UPLO = 'U' the upper trapezoid A(0:5,0:2) consists of the last\n\
  *  three columns of AP upper. The lower triangle A(4:6,0:2) consists of\n\
  *  the transpose of the first three columns of AP upper.\n\
  *  For UPLO = 'L' the lower trapezoid A(1:6,0:2) consists of the first\n\
  *  three columns of AP lower. The upper triangle A(0:2,0:2) consists of\n\
  *  the transpose of the last three columns of AP lower.\n\
  *  This covers the case N even and TRANSR = 'N'.\n\
  *\n\
  *         RFP A                   RFP A\n\
  *\n\
  *        03 04 05                33 43 53\n\
  *        13 14 15                00 44 54\n\
  *        23 24 25                10 11 55\n\
  *        33 34 35                20 21 22\n\
  *        00 44 45                30 31 32\n\
  *        01 11 55                40 41 42\n\
  *        02 12 22                50 51 52\n\
  *\n\
  *  Now let TRANSR = 'T'. RFP A in both UPLO cases is just the\n\
  *  transpose of RFP A above. One therefore gets:\n\
  *\n\
  *\n\
  *           RFP A                   RFP A\n\
  *\n\
  *     03 13 23 33 00 01 02    33 00 10 20 30 40 50\n\
  *     04 14 24 34 44 11 12    43 44 11 21 31 41 51\n\
  *     05 15 25 35 45 55 22    53 54 55 22 32 42 52\n\
  *\n\
  *\n\
  *  We then consider Rectangular Full Packed (RFP) Format when N is\n\
  *  odd. We give an example where N = 5.\n\
  *\n\
  *     AP is Upper                 AP is Lower\n\
  *\n\
  *   00 01 02 03 04              00\n\
  *      11 12 13 14              10 11\n\
  *         22 23 24              20 21 22\n\
  *            33 34              30 31 32 33\n\
  *               44              40 41 42 43 44\n\
  *\n\
  *\n\
  *  Let TRANSR = 'N'. RFP holds AP as follows:\n\
  *  For UPLO = 'U' the upper trapezoid A(0:4,0:2) consists of the last\n\
  *  three columns of AP upper. The lower triangle A(3:4,0:1) consists of\n\
  *  the transpose of the first two columns of AP upper.\n\
  *  For UPLO = 'L' the lower trapezoid A(0:4,0:2) consists of the first\n\
  *  three columns of AP lower. The upper triangle A(0:1,1:2) consists of\n\
  *  the transpose of the last two columns of AP lower.\n\
  *  This covers the case N odd and TRANSR = 'N'.\n\
  *\n\
  *         RFP A                   RFP A\n\
  *\n\
  *        02 03 04                00 33 43\n\
  *        12 13 14                10 11 44\n\
  *        22 23 24                20 21 22\n\
  *        00 33 34                30 31 32\n\
  *        01 11 44                40 41 42\n\
  *\n\
  *  Now let TRANSR = 'T'. RFP A in both UPLO cases is just the\n\
  *  transpose of RFP A above. One therefore gets:\n\
  *\n\
  *           RFP A                   RFP A\n\
  *\n\
  *     02 12 22 00 01             00 10 20 30 40 50\n\
  *     03 13 23 33 11             33 11 21 31 41 51\n\
  *     04 14 24 34 44             43 44 22 32 42 52\n\
  *\n\
  *  =====================================================================\n\
  *\n"
