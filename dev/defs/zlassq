--- 
:name: zlassq
:md5sum: e346894954ce60bf7035bd1e4a6f75c3
:category: :subroutine
:arguments: 
- n: 
    :type: integer
    :intent: input
- x: 
    :type: doublecomplex
    :intent: input
    :dims: 
    - n
- incx: 
    :type: integer
    :intent: input
- scale: 
    :type: doublereal
    :intent: input/output
- sumsq: 
    :type: doublereal
    :intent: input/output
:substitutions: {}

:fortran_help: "      SUBROUTINE ZLASSQ( N, X, INCX, SCALE, SUMSQ )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  ZLASSQ returns the values scl and ssq such that\n\
  *\n\
  *     ( scl**2 )*ssq = x( 1 )**2 +...+ x( n )**2 + ( scale**2 )*sumsq,\n\
  *\n\
  *  where x( i ) = abs( X( 1 + ( i - 1 )*INCX ) ). The value of sumsq is\n\
  *  assumed to be at least unity and the value of ssq will then satisfy\n\
  *\n\
  *     1.0 .le. ssq .le. ( sumsq + 2*n ).\n\
  *\n\
  *  scale is assumed to be non-negative and scl returns the value\n\
  *\n\
  *     scl = max( scale, abs( real( x( i ) ) ), abs( aimag( x( i ) ) ) ),\n\
  *            i\n\
  *\n\
  *  scale and sumsq must be supplied in SCALE and SUMSQ respectively.\n\
  *  SCALE and SUMSQ are overwritten by scl and ssq respectively.\n\
  *\n\
  *  The routine makes only one pass through the vector X.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The number of elements to be used from the vector X.\n\
  *\n\
  *  X       (input) COMPLEX*16 array, dimension (N)\n\
  *          The vector x as described above.\n\
  *             x( i )  = X( 1 + ( i - 1 )*INCX ), 1 <= i <= n.\n\
  *\n\
  *  INCX    (input) INTEGER\n\
  *          The increment between successive values of the vector X.\n\
  *          INCX > 0.\n\
  *\n\
  *  SCALE   (input/output) DOUBLE PRECISION\n\
  *          On entry, the value  scale  in the equation above.\n\
  *          On exit, SCALE is overwritten with the value  scl .\n\
  *\n\
  *  SUMSQ   (input/output) DOUBLE PRECISION\n\
  *          On entry, the value  sumsq  in the equation above.\n\
  *          On exit, SUMSQ is overwritten with the value  ssq .\n\
  *\n\n\
  * =====================================================================\n\
  *\n"
