--- 
:name: dgetc2
:md5sum: 8407e50951ea8e41f50aa9499510d542
:category: :subroutine
:arguments: 
- n: 
    :type: integer
    :intent: input
- a: 
    :type: doublereal
    :intent: input/output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- ipiv: 
    :type: integer
    :intent: output
    :dims: 
    - n
- jpiv: 
    :type: integer
    :intent: output
    :dims: 
    - n
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE DGETC2( N, A, LDA, IPIV, JPIV, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  DGETC2 computes an LU factorization with complete pivoting of the\n\
  *  n-by-n matrix A. The factorization has the form A = P * L * U * Q,\n\
  *  where P and Q are permutation matrices, L is lower triangular with\n\
  *  unit diagonal elements and U is upper triangular.\n\
  *\n\
  *  This is the Level 2 BLAS algorithm.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A. N >= 0.\n\
  *\n\
  *  A       (input/output) DOUBLE PRECISION array, dimension (LDA, N)\n\
  *          On entry, the n-by-n matrix A to be factored.\n\
  *          On exit, the factors L and U from the factorization\n\
  *          A = P*L*U*Q; the unit diagonal elements of L are not stored.\n\
  *          If U(k, k) appears to be less than SMIN, U(k, k) is given the\n\
  *          value of SMIN, i.e., giving a nonsingular perturbed system.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,N).\n\
  *\n\
  *  IPIV    (output) INTEGER array, dimension(N).\n\
  *          The pivot indices; for 1 <= i <= N, row i of the\n\
  *          matrix has been interchanged with row IPIV(i).\n\
  *\n\
  *  JPIV    (output) INTEGER array, dimension(N).\n\
  *          The pivot indices; for 1 <= j <= N, column j of the\n\
  *          matrix has been interchanged with column JPIV(j).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *           = 0: successful exit\n\
  *           > 0: if INFO = k, U(k, k) is likely to produce owerflow if\n\
  *                we try to solve for x in Ax = b. So U is perturbed to\n\
  *                avoid the overflow.\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  Based on contributions by\n\
  *     Bo Kagstrom and Peter Poromaa, Department of Computing Science,\n\
  *     Umea University, S-901 87 Umea, Sweden.\n\
  *\n\
  *  =====================================================================\n\
  *\n"
