--- 
:name: cpbstf
:md5sum: dd6e5004dfa546d7f8f70d62b37358f4
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- kd: 
    :type: integer
    :intent: input
- ab: 
    :type: complex
    :intent: input/output
    :dims: 
    - ldab
    - n
- ldab: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE CPBSTF( UPLO, N, KD, AB, LDAB, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  CPBSTF computes a split Cholesky factorization of a complex\n\
  *  Hermitian positive definite band matrix A.\n\
  *\n\
  *  This routine is designed to be used in conjunction with CHBGST.\n\
  *\n\
  *  The factorization has the form  A = S**H*S  where S is a band matrix\n\
  *  of the same bandwidth as A and the following structure:\n\
  *\n\
  *    S = ( U    )\n\
  *        ( M  L )\n\
  *\n\
  *  where U is upper triangular of order m = (n+kd)/2, and L is lower\n\
  *  triangular of order n-m.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  Upper triangle of A is stored;\n\
  *          = 'L':  Lower triangle of A is stored.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  KD      (input) INTEGER\n\
  *          The number of superdiagonals of the matrix A if UPLO = 'U',\n\
  *          or the number of subdiagonals if UPLO = 'L'.  KD >= 0.\n\
  *\n\
  *  AB      (input/output) COMPLEX array, dimension (LDAB,N)\n\
  *          On entry, the upper or lower triangle of the Hermitian band\n\
  *          matrix A, stored in the first kd+1 rows of the array.  The\n\
  *          j-th column of A is stored in the j-th column of the array AB\n\
  *          as follows:\n\
  *          if UPLO = 'U', AB(kd+1+i-j,j) = A(i,j) for max(1,j-kd)<=i<=j;\n\
  *          if UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j<=i<=min(n,j+kd).\n\
  *\n\
  *          On exit, if INFO = 0, the factor S from the split Cholesky\n\
  *          factorization A = S**H*S. See Further Details.\n\
  *\n\
  *  LDAB    (input) INTEGER\n\
  *          The leading dimension of the array AB.  LDAB >= KD+1.\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0: successful exit\n\
  *          < 0: if INFO = -i, the i-th argument had an illegal value\n\
  *          > 0: if INFO = i, the factorization could not be completed,\n\
  *               because the updated element a(i,i) was negative; the\n\
  *               matrix A is not positive definite.\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  The band storage scheme is illustrated by the following example, when\n\
  *  N = 7, KD = 2:\n\
  *\n\
  *  S = ( s11  s12  s13                     )\n\
  *      (      s22  s23  s24                )\n\
  *      (           s33  s34                )\n\
  *      (                s44                )\n\
  *      (           s53  s54  s55           )\n\
  *      (                s64  s65  s66      )\n\
  *      (                     s75  s76  s77 )\n\
  *\n\
  *  If UPLO = 'U', the array AB holds:\n\
  *\n\
  *  on entry:                          on exit:\n\
  *\n\
  *   *    *   a13  a24  a35  a46  a57   *    *   s13  s24  s53' s64' s75'\n\
  *   *   a12  a23  a34  a45  a56  a67   *   s12  s23  s34  s54' s65' s76'\n\
  *  a11  a22  a33  a44  a55  a66  a77  s11  s22  s33  s44  s55  s66  s77\n\
  *\n\
  *  If UPLO = 'L', the array AB holds:\n\
  *\n\
  *  on entry:                          on exit:\n\
  *\n\
  *  a11  a22  a33  a44  a55  a66  a77  s11  s22  s33  s44  s55  s66  s77\n\
  *  a21  a32  a43  a54  a65  a76   *   s12' s23' s34' s54  s65  s76   *\n\
  *  a31  a42  a53  a64  a64   *    *   s13' s24' s53  s64  s75   *    *\n\
  *\n\
  *  Array elements marked * are not used by the routine; s12' denotes\n\
  *  conjg(s12); the diagonal elements of S are real.\n\
  *\n\
  *  =====================================================================\n\
  *\n"
