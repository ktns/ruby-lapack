--- 
:name: ztrtrs
:md5sum: 8c053191eeb4d8f06ee6f6547433d23e
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- trans: 
    :type: char
    :intent: input
- diag: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- nrhs: 
    :type: integer
    :intent: input
- a: 
    :type: doublecomplex
    :intent: input
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- b: 
    :type: doublecomplex
    :intent: input/output
    :dims: 
    - ldb
    - nrhs
- ldb: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE ZTRTRS( UPLO, TRANS, DIAG, N, NRHS, A, LDA, B, LDB, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  ZTRTRS solves a triangular system of the form\n\
  *\n\
  *     A * X = B,  A**T * X = B,  or  A**H * X = B,\n\
  *\n\
  *  where A is a triangular matrix of order N, and B is an N-by-NRHS\n\
  *  matrix.  A check is made to verify that A is nonsingular.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  A is upper triangular;\n\
  *          = 'L':  A is lower triangular.\n\
  *\n\
  *  TRANS   (input) CHARACTER*1\n\
  *          Specifies the form of the system of equations:\n\
  *          = 'N':  A * X = B     (No transpose)\n\
  *          = 'T':  A**T * X = B  (Transpose)\n\
  *          = 'C':  A**H * X = B  (Conjugate transpose)\n\
  *\n\
  *  DIAG    (input) CHARACTER*1\n\
  *          = 'N':  A is non-unit triangular;\n\
  *          = 'U':  A is unit triangular.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  NRHS    (input) INTEGER\n\
  *          The number of right hand sides, i.e., the number of columns\n\
  *          of the matrix B.  NRHS >= 0.\n\
  *\n\
  *  A       (input) COMPLEX*16 array, dimension (LDA,N)\n\
  *          The triangular matrix A.  If UPLO = 'U', the leading N-by-N\n\
  *          upper triangular part of the array A contains the upper\n\
  *          triangular matrix, and the strictly lower triangular part of\n\
  *          A is not referenced.  If UPLO = 'L', the leading N-by-N lower\n\
  *          triangular part of the array A contains the lower triangular\n\
  *          matrix, and the strictly upper triangular part of A is not\n\
  *          referenced.  If DIAG = 'U', the diagonal elements of A are\n\
  *          also not referenced and are assumed to be 1.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,N).\n\
  *\n\
  *  B       (input/output) COMPLEX*16 array, dimension (LDB,NRHS)\n\
  *          On entry, the right hand side matrix B.\n\
  *          On exit, if INFO = 0, the solution matrix X.\n\
  *\n\
  *  LDB     (input) INTEGER\n\
  *          The leading dimension of the array B.  LDB >= max(1,N).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0: if INFO = -i, the i-th argument had an illegal value\n\
  *          > 0: if INFO = i, the i-th diagonal element of A is zero,\n\
  *               indicating that the matrix is singular and the solutions\n\
  *               X have not been computed.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
