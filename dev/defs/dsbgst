--- 
:name: dsbgst
:md5sum: d2437ea90e45fe4864720cf3787add9d
:category: :subroutine
:arguments: 
- vect: 
    :type: char
    :intent: input
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- ka: 
    :type: integer
    :intent: input
- kb: 
    :type: integer
    :intent: input
- ab: 
    :type: doublereal
    :intent: input/output
    :dims: 
    - ldab
    - n
- ldab: 
    :type: integer
    :intent: input
- bb: 
    :type: doublereal
    :intent: input
    :dims: 
    - ldbb
    - n
- ldbb: 
    :type: integer
    :intent: input
- x: 
    :type: doublereal
    :intent: output
    :dims: 
    - ldx
    - n
- ldx: 
    :type: integer
    :intent: input
- work: 
    :type: doublereal
    :intent: workspace
    :dims: 
    - 2*n
- info: 
    :type: integer
    :intent: output
:substitutions: 
  ldx: "lsame_(&vect,\"V\") ? MAX(1,n) : 1"
:fortran_help: "      SUBROUTINE DSBGST( VECT, UPLO, N, KA, KB, AB, LDAB, BB, LDBB, X, LDX, WORK, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  DSBGST reduces a real symmetric-definite banded generalized\n\
  *  eigenproblem  A*x = lambda*B*x  to standard form  C*y = lambda*y,\n\
  *  such that C has the same bandwidth as A.\n\
  *\n\
  *  B must have been previously factorized as S**T*S by DPBSTF, using a\n\
  *  split Cholesky factorization. A is overwritten by C = X**T*A*X, where\n\
  *  X = S**(-1)*Q and Q is an orthogonal matrix chosen to preserve the\n\
  *  bandwidth of A.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  VECT    (input) CHARACTER*1\n\
  *          = 'N':  do not form the transformation matrix X;\n\
  *          = 'V':  form X.\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  Upper triangle of A is stored;\n\
  *          = 'L':  Lower triangle of A is stored.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrices A and B.  N >= 0.\n\
  *\n\
  *  KA      (input) INTEGER\n\
  *          The number of superdiagonals of the matrix A if UPLO = 'U',\n\
  *          or the number of subdiagonals if UPLO = 'L'.  KA >= 0.\n\
  *\n\
  *  KB      (input) INTEGER\n\
  *          The number of superdiagonals of the matrix B if UPLO = 'U',\n\
  *          or the number of subdiagonals if UPLO = 'L'.  KA >= KB >= 0.\n\
  *\n\
  *  AB      (input/output) DOUBLE PRECISION array, dimension (LDAB,N)\n\
  *          On entry, the upper or lower triangle of the symmetric band\n\
  *          matrix A, stored in the first ka+1 rows of the array.  The\n\
  *          j-th column of A is stored in the j-th column of the array AB\n\
  *          as follows:\n\
  *          if UPLO = 'U', AB(ka+1+i-j,j) = A(i,j) for max(1,j-ka)<=i<=j;\n\
  *          if UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j<=i<=min(n,j+ka).\n\
  *\n\
  *          On exit, the transformed matrix X**T*A*X, stored in the same\n\
  *          format as A.\n\
  *\n\
  *  LDAB    (input) INTEGER\n\
  *          The leading dimension of the array AB.  LDAB >= KA+1.\n\
  *\n\
  *  BB      (input) DOUBLE PRECISION array, dimension (LDBB,N)\n\
  *          The banded factor S from the split Cholesky factorization of\n\
  *          B, as returned by DPBSTF, stored in the first KB+1 rows of\n\
  *          the array.\n\
  *\n\
  *  LDBB    (input) INTEGER\n\
  *          The leading dimension of the array BB.  LDBB >= KB+1.\n\
  *\n\
  *  X       (output) DOUBLE PRECISION array, dimension (LDX,N)\n\
  *          If VECT = 'V', the n-by-n matrix X.\n\
  *          If VECT = 'N', the array X is not referenced.\n\
  *\n\
  *  LDX     (input) INTEGER\n\
  *          The leading dimension of the array X.\n\
  *          LDX >= max(1,N) if VECT = 'V'; LDX >= 1 otherwise.\n\
  *\n\
  *  WORK    (workspace) DOUBLE PRECISION array, dimension (2*N)\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
