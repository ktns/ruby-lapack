--- 
:name: slarz
:md5sum: 6000475d79cf0b1bd3de8df6c1d97c1f
:category: :subroutine
:arguments: 
- side: 
    :type: char
    :intent: input
- m: 
    :type: integer
    :intent: input
- n: 
    :type: integer
    :intent: input
- l: 
    :type: integer
    :intent: input
- v: 
    :type: real
    :intent: input
    :dims: 
    - 1+(l-1)*abs(incv)
- incv: 
    :type: integer
    :intent: input
- tau: 
    :type: real
    :intent: input
- c: 
    :type: real
    :intent: input/output
    :dims: 
    - ldc
    - n
- ldc: 
    :type: integer
    :intent: input
- work: 
    :type: real
    :intent: workspace
    :dims: 
    - "lsame_(&side,\"L\") ? n : lsame_(&side,\"R\") ? m : 0"
:substitutions: {}

:fortran_help: "      SUBROUTINE SLARZ( SIDE, M, N, L, V, INCV, TAU, C, LDC, WORK )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  SLARZ applies a real elementary reflector H to a real M-by-N\n\
  *  matrix C, from either the left or the right. H is represented in the\n\
  *  form\n\
  *\n\
  *        H = I - tau * v * v'\n\
  *\n\
  *  where tau is a real scalar and v is a real vector.\n\
  *\n\
  *  If tau = 0, then H is taken to be the unit matrix.\n\
  *\n\
  *\n\
  *  H is a product of k elementary reflectors as returned by STZRZF.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  SIDE    (input) CHARACTER*1\n\
  *          = 'L': form  H * C\n\
  *          = 'R': form  C * H\n\
  *\n\
  *  M       (input) INTEGER\n\
  *          The number of rows of the matrix C.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The number of columns of the matrix C.\n\
  *\n\
  *  L       (input) INTEGER\n\
  *          The number of entries of the vector V containing\n\
  *          the meaningful part of the Householder vectors.\n\
  *          If SIDE = 'L', M >= L >= 0, if SIDE = 'R', N >= L >= 0.\n\
  *\n\
  *  V       (input) REAL array, dimension (1+(L-1)*abs(INCV))\n\
  *          The vector v in the representation of H as returned by\n\
  *          STZRZF. V is not used if TAU = 0.\n\
  *\n\
  *  INCV    (input) INTEGER\n\
  *          The increment between elements of v. INCV <> 0.\n\
  *\n\
  *  TAU     (input) REAL\n\
  *          The value tau in the representation of H.\n\
  *\n\
  *  C       (input/output) REAL array, dimension (LDC,N)\n\
  *          On entry, the M-by-N matrix C.\n\
  *          On exit, C is overwritten by the matrix H * C if SIDE = 'L',\n\
  *          or C * H if SIDE = 'R'.\n\
  *\n\
  *  LDC     (input) INTEGER\n\
  *          The leading dimension of the array C. LDC >= max(1,M).\n\
  *\n\
  *  WORK    (workspace) REAL array, dimension\n\
  *                         (N) if SIDE = 'L'\n\
  *                      or (M) if SIDE = 'R'\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  Based on contributions by\n\
  *    A. Petitet, Computer Science Dept., Univ. of Tenn., Knoxville, USA\n\
  *\n\
  *  =====================================================================\n\
  *\n"
