--- 
:name: claqgb
:md5sum: 3949a6ac3870026b07ce26c34aa20e54
:category: :subroutine
:arguments: 
- m: 
    :type: integer
    :intent: input
- n: 
    :type: integer
    :intent: input
- kl: 
    :type: integer
    :intent: input
- ku: 
    :type: integer
    :intent: input
- ab: 
    :type: complex
    :intent: input/output
    :dims: 
    - ldab
    - n
- ldab: 
    :type: integer
    :intent: input
- r: 
    :type: real
    :intent: input
    :dims: 
    - m
- c: 
    :type: real
    :intent: input
    :dims: 
    - n
- rowcnd: 
    :type: real
    :intent: input
- colcnd: 
    :type: real
    :intent: input
- amax: 
    :type: real
    :intent: input
- equed: 
    :type: char
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE CLAQGB( M, N, KL, KU, AB, LDAB, R, C, ROWCND, COLCND, AMAX, EQUED )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  CLAQGB equilibrates a general M by N band matrix A with KL\n\
  *  subdiagonals and KU superdiagonals using the row and scaling factors\n\
  *  in the vectors R and C.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  M       (input) INTEGER\n\
  *          The number of rows of the matrix A.  M >= 0.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The number of columns of the matrix A.  N >= 0.\n\
  *\n\
  *  KL      (input) INTEGER\n\
  *          The number of subdiagonals within the band of A.  KL >= 0.\n\
  *\n\
  *  KU      (input) INTEGER\n\
  *          The number of superdiagonals within the band of A.  KU >= 0.\n\
  *\n\
  *  AB      (input/output) COMPLEX array, dimension (LDAB,N)\n\
  *          On entry, the matrix A in band storage, in rows 1 to KL+KU+1.\n\
  *          The j-th column of A is stored in the j-th column of the\n\
  *          array AB as follows:\n\
  *          AB(ku+1+i-j,j) = A(i,j) for max(1,j-ku)<=i<=min(m,j+kl)\n\
  *\n\
  *          On exit, the equilibrated matrix, in the same storage format\n\
  *          as A.  See EQUED for the form of the equilibrated matrix.\n\
  *\n\
  *  LDAB    (input) INTEGER\n\
  *          The leading dimension of the array AB.  LDA >= KL+KU+1.\n\
  *\n\
  *  R       (input) REAL array, dimension (M)\n\
  *          The row scale factors for A.\n\
  *\n\
  *  C       (input) REAL array, dimension (N)\n\
  *          The column scale factors for A.\n\
  *\n\
  *  ROWCND  (input) REAL\n\
  *          Ratio of the smallest R(i) to the largest R(i).\n\
  *\n\
  *  COLCND  (input) REAL\n\
  *          Ratio of the smallest C(i) to the largest C(i).\n\
  *\n\
  *  AMAX    (input) REAL\n\
  *          Absolute value of largest matrix entry.\n\
  *\n\
  *  EQUED   (output) CHARACTER*1\n\
  *          Specifies the form of equilibration that was done.\n\
  *          = 'N':  No equilibration\n\
  *          = 'R':  Row equilibration, i.e., A has been premultiplied by\n\
  *                  diag(R).\n\
  *          = 'C':  Column equilibration, i.e., A has been postmultiplied\n\
  *                  by diag(C).\n\
  *          = 'B':  Both row and column equilibration, i.e., A has been\n\
  *                  replaced by diag(R) * A * diag(C).\n\
  *\n\
  *  Internal Parameters\n\
  *  ===================\n\
  *\n\
  *  THRESH is a threshold value used to decide if row or column scaling\n\
  *  should be done based on the ratio of the row or column scaling\n\
  *  factors.  If ROWCND < THRESH, row scaling is done, and if\n\
  *  COLCND < THRESH, column scaling is done.\n\
  *\n\
  *  LARGE and SMALL are threshold values used to decide if row scaling\n\
  *  should be done based on the absolute size of the largest matrix\n\
  *  element.  If AMAX > LARGE or AMAX < SMALL, row scaling is done.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
