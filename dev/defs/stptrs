--- 
:name: stptrs
:md5sum: 780738733718513efa60d63a4f9ef31f
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- trans: 
    :type: char
    :intent: input
- diag: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- nrhs: 
    :type: integer
    :intent: input
- ap: 
    :type: real
    :intent: input
    :dims: 
    - n*(n+1)/2
- b: 
    :type: real
    :intent: input/output
    :dims: 
    - ldb
    - nrhs
- ldb: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE STPTRS( UPLO, TRANS, DIAG, N, NRHS, AP, B, LDB, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  STPTRS solves a triangular system of the form\n\
  *\n\
  *     A * X = B  or  A**T * X = B,\n\
  *\n\
  *  where A is a triangular matrix of order N stored in packed format,\n\
  *  and B is an N-by-NRHS matrix.  A check is made to verify that A is\n\
  *  nonsingular.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  A is upper triangular;\n\
  *          = 'L':  A is lower triangular.\n\
  *\n\
  *  TRANS   (input) CHARACTER*1\n\
  *          Specifies the form of the system of equations:\n\
  *          = 'N':  A * X = B  (No transpose)\n\
  *          = 'T':  A**T * X = B  (Transpose)\n\
  *          = 'C':  A**H * X = B  (Conjugate transpose = Transpose)\n\
  *\n\
  *  DIAG    (input) CHARACTER*1\n\
  *          = 'N':  A is non-unit triangular;\n\
  *          = 'U':  A is unit triangular.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  NRHS    (input) INTEGER\n\
  *          The number of right hand sides, i.e., the number of columns\n\
  *          of the matrix B.  NRHS >= 0.\n\
  *\n\
  *  AP      (input) REAL array, dimension (N*(N+1)/2)\n\
  *          The upper or lower triangular matrix A, packed columnwise in\n\
  *          a linear array.  The j-th column of A is stored in the array\n\
  *          AP as follows:\n\
  *          if UPLO = 'U', AP(i + (j-1)*j/2) = A(i,j) for 1<=i<=j;\n\
  *          if UPLO = 'L', AP(i + (j-1)*(2*n-j)/2) = A(i,j) for j<=i<=n.\n\
  *\n\
  *  B       (input/output) REAL array, dimension (LDB,NRHS)\n\
  *          On entry, the right hand side matrix B.\n\
  *          On exit, if INFO = 0, the solution matrix X.\n\
  *\n\
  *  LDB     (input) INTEGER\n\
  *          The leading dimension of the array B.  LDB >= max(1,N).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *          > 0:  if INFO = i, the i-th diagonal element of A is zero,\n\
  *                indicating that the matrix is singular and the\n\
  *                solutions X have not been computed.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
