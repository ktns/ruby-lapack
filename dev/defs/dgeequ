--- 
:name: dgeequ
:md5sum: 24654d259d19a245582b147d74ff0ecb
:category: :subroutine
:arguments: 
- m: 
    :type: integer
    :intent: input
- n: 
    :type: integer
    :intent: input
- a: 
    :type: doublereal
    :intent: input
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- r: 
    :type: doublereal
    :intent: output
    :dims: 
    - m
- c: 
    :type: doublereal
    :intent: output
    :dims: 
    - n
- rowcnd: 
    :type: doublereal
    :intent: output
- colcnd: 
    :type: doublereal
    :intent: output
- amax: 
    :type: doublereal
    :intent: output
- info: 
    :type: integer
    :intent: output
:substitutions: 
  m: lda
:fortran_help: "      SUBROUTINE DGEEQU( M, N, A, LDA, R, C, ROWCND, COLCND, AMAX, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  DGEEQU computes row and column scalings intended to equilibrate an\n\
  *  M-by-N matrix A and reduce its condition number.  R returns the row\n\
  *  scale factors and C the column scale factors, chosen to try to make\n\
  *  the largest element in each row and column of the matrix B with\n\
  *  elements B(i,j)=R(i)*A(i,j)*C(j) have absolute value 1.\n\
  *\n\
  *  R(i) and C(j) are restricted to be between SMLNUM = smallest safe\n\
  *  number and BIGNUM = largest safe number.  Use of these scaling\n\
  *  factors is not guaranteed to reduce the condition number of A but\n\
  *  works well in practice.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  M       (input) INTEGER\n\
  *          The number of rows of the matrix A.  M >= 0.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The number of columns of the matrix A.  N >= 0.\n\
  *\n\
  *  A       (input) DOUBLE PRECISION array, dimension (LDA,N)\n\
  *          The M-by-N matrix whose equilibration factors are\n\
  *          to be computed.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,M).\n\
  *\n\
  *  R       (output) DOUBLE PRECISION array, dimension (M)\n\
  *          If INFO = 0 or INFO > M, R contains the row scale factors\n\
  *          for A.\n\
  *\n\
  *  C       (output) DOUBLE PRECISION array, dimension (N)\n\
  *          If INFO = 0,  C contains the column scale factors for A.\n\
  *\n\
  *  ROWCND  (output) DOUBLE PRECISION\n\
  *          If INFO = 0 or INFO > M, ROWCND contains the ratio of the\n\
  *          smallest R(i) to the largest R(i).  If ROWCND >= 0.1 and\n\
  *          AMAX is neither too large nor too small, it is not worth\n\
  *          scaling by R.\n\
  *\n\
  *  COLCND  (output) DOUBLE PRECISION\n\
  *          If INFO = 0, COLCND contains the ratio of the smallest\n\
  *          C(i) to the largest C(i).  If COLCND >= 0.1, it is not\n\
  *          worth scaling by C.\n\
  *\n\
  *  AMAX    (output) DOUBLE PRECISION\n\
  *          Absolute value of largest matrix element.  If AMAX is very\n\
  *          close to overflow or very close to underflow, the matrix\n\
  *          should be scaled.\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *          > 0:  if INFO = i,  and i is\n\
  *                <= M:  the i-th row of A is exactly zero\n\
  *                >  M:  the (i-M)-th column of A is exactly zero\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
