--- 
:name: cpotf2
:md5sum: a7c491fac2d61e6bc2983fde569beb7d
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- a: 
    :type: complex
    :intent: input/output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE CPOTF2( UPLO, N, A, LDA, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  CPOTF2 computes the Cholesky factorization of a complex Hermitian\n\
  *  positive definite matrix A.\n\
  *\n\
  *  The factorization has the form\n\
  *     A = U' * U ,  if UPLO = 'U', or\n\
  *     A = L  * L',  if UPLO = 'L',\n\
  *  where U is an upper triangular matrix and L is lower triangular.\n\
  *\n\
  *  This is the unblocked version of the algorithm, calling Level 2 BLAS.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          Specifies whether the upper or lower triangular part of the\n\
  *          Hermitian matrix A is stored.\n\
  *          = 'U':  Upper triangular\n\
  *          = 'L':  Lower triangular\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  A       (input/output) COMPLEX array, dimension (LDA,N)\n\
  *          On entry, the Hermitian matrix A.  If UPLO = 'U', the leading\n\
  *          n by n upper triangular part of A contains the upper\n\
  *          triangular part of the matrix A, and the strictly lower\n\
  *          triangular part of A is not referenced.  If UPLO = 'L', the\n\
  *          leading n by n lower triangular part of A contains the lower\n\
  *          triangular part of the matrix A, and the strictly upper\n\
  *          triangular part of A is not referenced.\n\
  *\n\
  *          On exit, if INFO = 0, the factor U or L from the Cholesky\n\
  *          factorization A = U'*U  or A = L*L'.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,N).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0: successful exit\n\
  *          < 0: if INFO = -k, the k-th argument had an illegal value\n\
  *          > 0: if INFO = k, the leading minor of order k is not\n\
  *               positive definite, and the factorization could not be\n\
  *               completed.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
