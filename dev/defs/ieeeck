--- 
:name: ieeeck
:md5sum: 912297d3164c5b304dfe88d1002d97b1
:category: :function
:type: integer
:arguments: 
- ispec: 
    :type: integer
    :intent: input
- zero: 
    :type: real
    :intent: input
- one: 
    :type: real
    :intent: input
:substitutions: {}

:fortran_help: "      INTEGER          FUNCTION IEEECK( ISPEC, ZERO, ONE )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  IEEECK is called from the ILAENV to verify that Infinity and\n\
  *  possibly NaN arithmetic is safe (i.e. will not trap).\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  ISPEC   (input) INTEGER\n\
  *          Specifies whether to test just for inifinity arithmetic\n\
  *          or whether to test for infinity and NaN arithmetic.\n\
  *          = 0: Verify infinity arithmetic only.\n\
  *          = 1: Verify infinity and NaN arithmetic.\n\
  *\n\
  *  ZERO    (input) REAL\n\
  *          Must contain the value 0.0\n\
  *          This is passed to prevent the compiler from optimizing\n\
  *          away this code.\n\
  *\n\
  *  ONE     (input) REAL\n\
  *          Must contain the value 1.0\n\
  *          This is passed to prevent the compiler from optimizing\n\
  *          away this code.\n\
  *\n\
  *  RETURN VALUE:  INTEGER\n\
  *          = 0:  Arithmetic failed to produce the correct answers\n\
  *          = 1:  Arithmetic produced the correct answers\n\
  *\n\
  *     .. Local Scalars ..\n      REAL               NAN1, NAN2, NAN3, NAN4, NAN5, NAN6, NEGINF,\n     $                   NEGZRO, NEWZRO, POSINF\n\
  *     ..\n"
