--- 
:name: ssbtrd
:md5sum: 4d2b2c94a4720f12c22cbd1420997ff4
:category: :subroutine
:arguments: 
- vect: 
    :type: char
    :intent: input
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- kd: 
    :type: integer
    :intent: input
- ab: 
    :type: real
    :intent: input/output
    :dims: 
    - ldab
    - n
- ldab: 
    :type: integer
    :intent: input
- d: 
    :type: real
    :intent: output
    :dims: 
    - n
- e: 
    :type: real
    :intent: output
    :dims: 
    - n-1
- q: 
    :type: real
    :intent: input/output
    :dims: 
    - ldq
    - n
- ldq: 
    :type: integer
    :intent: input
- work: 
    :type: real
    :intent: workspace
    :dims: 
    - n
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE SSBTRD( VECT, UPLO, N, KD, AB, LDAB, D, E, Q, LDQ, WORK, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  SSBTRD reduces a real symmetric band matrix A to symmetric\n\
  *  tridiagonal form T by an orthogonal similarity transformation:\n\
  *  Q**T * A * Q = T.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  VECT    (input) CHARACTER*1\n\
  *          = 'N':  do not form Q;\n\
  *          = 'V':  form Q;\n\
  *          = 'U':  update a matrix X, by forming X*Q.\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  Upper triangle of A is stored;\n\
  *          = 'L':  Lower triangle of A is stored.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  KD      (input) INTEGER\n\
  *          The number of superdiagonals of the matrix A if UPLO = 'U',\n\
  *          or the number of subdiagonals if UPLO = 'L'.  KD >= 0.\n\
  *\n\
  *  AB      (input/output) REAL array, dimension (LDAB,N)\n\
  *          On entry, the upper or lower triangle of the symmetric band\n\
  *          matrix A, stored in the first KD+1 rows of the array.  The\n\
  *          j-th column of A is stored in the j-th column of the array AB\n\
  *          as follows:\n\
  *          if UPLO = 'U', AB(kd+1+i-j,j) = A(i,j) for max(1,j-kd)<=i<=j;\n\
  *          if UPLO = 'L', AB(1+i-j,j)    = A(i,j) for j<=i<=min(n,j+kd).\n\
  *          On exit, the diagonal elements of AB are overwritten by the\n\
  *          diagonal elements of the tridiagonal matrix T; if KD > 0, the\n\
  *          elements on the first superdiagonal (if UPLO = 'U') or the\n\
  *          first subdiagonal (if UPLO = 'L') are overwritten by the\n\
  *          off-diagonal elements of T; the rest of AB is overwritten by\n\
  *          values generated during the reduction.\n\
  *\n\
  *  LDAB    (input) INTEGER\n\
  *          The leading dimension of the array AB.  LDAB >= KD+1.\n\
  *\n\
  *  D       (output) REAL array, dimension (N)\n\
  *          The diagonal elements of the tridiagonal matrix T.\n\
  *\n\
  *  E       (output) REAL array, dimension (N-1)\n\
  *          The off-diagonal elements of the tridiagonal matrix T:\n\
  *          E(i) = T(i,i+1) if UPLO = 'U'; E(i) = T(i+1,i) if UPLO = 'L'.\n\
  *\n\
  *  Q       (input/output) REAL array, dimension (LDQ,N)\n\
  *          On entry, if VECT = 'U', then Q must contain an N-by-N\n\
  *          matrix X; if VECT = 'N' or 'V', then Q need not be set.\n\
  *\n\
  *          On exit:\n\
  *          if VECT = 'V', Q contains the N-by-N orthogonal matrix Q;\n\
  *          if VECT = 'U', Q contains the product X*Q;\n\
  *          if VECT = 'N', the array Q is not referenced.\n\
  *\n\
  *  LDQ     (input) INTEGER\n\
  *          The leading dimension of the array Q.\n\
  *          LDQ >= 1, and LDQ >= N if VECT = 'V' or 'U'.\n\
  *\n\
  *  WORK    (workspace) REAL array, dimension (N)\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  Modified by Linda Kaufman, Bell Labs.\n\
  *\n\
  *  =====================================================================\n\
  *\n"
