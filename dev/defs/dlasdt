--- 
:name: dlasdt
:md5sum: c087d4c2a38cb314111522d50756d606
:category: :subroutine
:arguments: 
- n: 
    :type: integer
    :intent: input
- lvl: 
    :type: integer
    :intent: output
- nd: 
    :type: integer
    :intent: output
- inode: 
    :type: integer
    :intent: output
    :dims: 
    - MAX(1,n)
- ndiml: 
    :type: integer
    :intent: output
    :dims: 
    - MAX(1,n)
- ndimr: 
    :type: integer
    :intent: output
    :dims: 
    - MAX(1,n)
- msub: 
    :type: integer
    :intent: input
:substitutions: {}

:fortran_help: "      SUBROUTINE DLASDT( N, LVL, ND, INODE, NDIML, NDIMR, MSUB )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  DLASDT creates a tree of subproblems for bidiagonal divide and\n\
  *  conquer.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *   N      (input) INTEGER\n\
  *          On entry, the number of diagonal elements of the\n\
  *          bidiagonal matrix.\n\
  *\n\
  *   LVL    (output) INTEGER\n\
  *          On exit, the number of levels on the computation tree.\n\
  *\n\
  *   ND     (output) INTEGER\n\
  *          On exit, the number of nodes on the tree.\n\
  *\n\
  *   INODE  (output) INTEGER array, dimension ( N )\n\
  *          On exit, centers of subproblems.\n\
  *\n\
  *   NDIML  (output) INTEGER array, dimension ( N )\n\
  *          On exit, row dimensions of left children.\n\
  *\n\
  *   NDIMR  (output) INTEGER array, dimension ( N )\n\
  *          On exit, row dimensions of right children.\n\
  *\n\
  *   MSUB   (input) INTEGER\n\
  *          On entry, the maximum row dimension each subproblem at the\n\
  *          bottom of the tree can be of.\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  Based on contributions by\n\
  *     Ming Gu and Huan Ren, Computer Science Division, University of\n\
  *     California at Berkeley, USA\n\
  *\n\
  *  =====================================================================\n\
  *\n"
