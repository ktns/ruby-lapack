--- 
:name: clauum
:md5sum: f581ea1c2a8bf3f26404843289f3189c
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- a: 
    :type: complex
    :intent: input/output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE CLAUUM( UPLO, N, A, LDA, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  CLAUUM computes the product U * U' or L' * L, where the triangular\n\
  *  factor U or L is stored in the upper or lower triangular part of\n\
  *  the array A.\n\
  *\n\
  *  If UPLO = 'U' or 'u' then the upper triangle of the result is stored,\n\
  *  overwriting the factor U in A.\n\
  *  If UPLO = 'L' or 'l' then the lower triangle of the result is stored,\n\
  *  overwriting the factor L in A.\n\
  *\n\
  *  This is the blocked form of the algorithm, calling Level 3 BLAS.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          Specifies whether the triangular factor stored in the array A\n\
  *          is upper or lower triangular:\n\
  *          = 'U':  Upper triangular\n\
  *          = 'L':  Lower triangular\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the triangular factor U or L.  N >= 0.\n\
  *\n\
  *  A       (input/output) COMPLEX array, dimension (LDA,N)\n\
  *          On entry, the triangular factor U or L.\n\
  *          On exit, if UPLO = 'U', the upper triangle of A is\n\
  *          overwritten with the upper triangle of the product U * U';\n\
  *          if UPLO = 'L', the lower triangle of A is overwritten with\n\
  *          the lower triangle of the product L' * L.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,N).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0: successful exit\n\
  *          < 0: if INFO = -k, the k-th argument had an illegal value\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
