--- 
:name: zhptrs
:md5sum: 6d68e7a4b40ea6491c12717a153266a3
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- nrhs: 
    :type: integer
    :intent: input
- ap: 
    :type: doublecomplex
    :intent: input
    :dims: 
    - n*(n+1)/2
- ipiv: 
    :type: integer
    :intent: input
    :dims: 
    - n
- b: 
    :type: doublecomplex
    :intent: input/output
    :dims: 
    - ldb
    - nrhs
- ldb: 
    :type: integer
    :intent: input
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE ZHPTRS( UPLO, N, NRHS, AP, IPIV, B, LDB, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  ZHPTRS solves a system of linear equations A*X = B with a complex\n\
  *  Hermitian matrix A stored in packed format using the factorization\n\
  *  A = U*D*U**H or A = L*D*L**H computed by ZHPTRF.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          Specifies whether the details of the factorization are stored\n\
  *          as an upper or lower triangular matrix.\n\
  *          = 'U':  Upper triangular, form is A = U*D*U**H;\n\
  *          = 'L':  Lower triangular, form is A = L*D*L**H.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  NRHS    (input) INTEGER\n\
  *          The number of right hand sides, i.e., the number of columns\n\
  *          of the matrix B.  NRHS >= 0.\n\
  *\n\
  *  AP      (input) COMPLEX*16 array, dimension (N*(N+1)/2)\n\
  *          The block diagonal matrix D and the multipliers used to\n\
  *          obtain the factor U or L as computed by ZHPTRF, stored as a\n\
  *          packed triangular matrix.\n\
  *\n\
  *  IPIV    (input) INTEGER array, dimension (N)\n\
  *          Details of the interchanges and the block structure of D\n\
  *          as determined by ZHPTRF.\n\
  *\n\
  *  B       (input/output) COMPLEX*16 array, dimension (LDB,NRHS)\n\
  *          On entry, the right hand side matrix B.\n\
  *          On exit, the solution matrix X.\n\
  *\n\
  *  LDB     (input) INTEGER\n\
  *          The leading dimension of the array B.  LDB >= max(1,N).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0: if INFO = -i, the i-th argument had an illegal value\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
