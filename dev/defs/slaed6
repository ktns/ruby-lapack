--- 
:name: slaed6
:md5sum: 13a1e6df9b21c8b69ce9525581404001
:category: :subroutine
:arguments: 
- kniter: 
    :type: integer
    :intent: input
- orgati: 
    :type: logical
    :intent: input
- rho: 
    :type: real
    :intent: input
- d: 
    :type: real
    :intent: input
    :dims: 
    - "3"
- z: 
    :type: real
    :intent: input
    :dims: 
    - "3"
- finit: 
    :type: real
    :intent: input
- tau: 
    :type: real
    :intent: output
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE SLAED6( KNITER, ORGATI, RHO, D, Z, FINIT, TAU, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  SLAED6 computes the positive or negative root (closest to the origin)\n\
  *  of\n\
  *                   z(1)        z(2)        z(3)\n\
  *  f(x) =   rho + --------- + ---------- + ---------\n\
  *                  d(1)-x      d(2)-x      d(3)-x\n\
  *\n\
  *  It is assumed that\n\
  *\n\
  *        if ORGATI = .true. the root is between d(2) and d(3);\n\
  *        otherwise it is between d(1) and d(2)\n\
  *\n\
  *  This routine will be called by SLAED4 when necessary. In most cases,\n\
  *  the root sought is the smallest in magnitude, though it might not be\n\
  *  in some extremely rare situations.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  KNITER       (input) INTEGER\n\
  *               Refer to SLAED4 for its significance.\n\
  *\n\
  *  ORGATI       (input) LOGICAL\n\
  *               If ORGATI is true, the needed root is between d(2) and\n\
  *               d(3); otherwise it is between d(1) and d(2).  See\n\
  *               SLAED4 for further details.\n\
  *\n\
  *  RHO          (input) REAL            \n\
  *               Refer to the equation f(x) above.\n\
  *\n\
  *  D            (input) REAL array, dimension (3)\n\
  *               D satisfies d(1) < d(2) < d(3).\n\
  *\n\
  *  Z            (input) REAL array, dimension (3)\n\
  *               Each of the elements in z must be positive.\n\
  *\n\
  *  FINIT        (input) REAL            \n\
  *               The value of f at 0. It is more accurate than the one\n\
  *               evaluated inside this routine (if someone wants to do\n\
  *               so).\n\
  *\n\
  *  TAU          (output) REAL            \n\
  *               The root of the equation f(x).\n\
  *\n\
  *  INFO         (output) INTEGER\n\
  *               = 0: successful exit\n\
  *               > 0: if INFO = 1, failure to converge\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  30/06/99: Based on contributions by\n\
  *     Ren-Cang Li, Computer Science Division, University of California\n\
  *     at Berkeley, USA\n\
  *\n\
  *  10/02/03: This version has a few statements commented out for thread safety\n\
  *     (machine parameters are computed on each entry). SJH.\n\
  *\n\
  *  05/10/06: Modified from a new version of Ren-Cang Li, use\n\
  *     Gragg-Thornton-Warner cubic convergent scheme for better stability.\n\
  *\n\
  *  =====================================================================\n\
  *\n"
