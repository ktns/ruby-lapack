--- 
:name: cgetri
:md5sum: 9ecd491ae64a30ddedf4b8b8b8b65820
:category: :subroutine
:arguments: 
- n: 
    :type: integer
    :intent: input
- a: 
    :type: complex
    :intent: input/output
    :dims: 
    - lda
    - n
- lda: 
    :type: integer
    :intent: input
- ipiv: 
    :type: integer
    :intent: input
    :dims: 
    - n
- work: 
    :type: complex
    :intent: output
    :dims: 
    - MAX(1,lwork)
- lwork: 
    :type: integer
    :intent: input
    :option: true
    :default: n
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE CGETRI( N, A, LDA, IPIV, WORK, LWORK, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  CGETRI computes the inverse of a matrix using the LU factorization\n\
  *  computed by CGETRF.\n\
  *\n\
  *  This method inverts U and then computes inv(A) by solving the system\n\
  *  inv(A)*L = inv(U) for inv(A).\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  A       (input/output) COMPLEX array, dimension (LDA,N)\n\
  *          On entry, the factors L and U from the factorization\n\
  *          A = P*L*U as computed by CGETRF.\n\
  *          On exit, if INFO = 0, the inverse of the original matrix A.\n\
  *\n\
  *  LDA     (input) INTEGER\n\
  *          The leading dimension of the array A.  LDA >= max(1,N).\n\
  *\n\
  *  IPIV    (input) INTEGER array, dimension (N)\n\
  *          The pivot indices from CGETRF; for 1<=i<=N, row i of the\n\
  *          matrix was interchanged with row IPIV(i).\n\
  *\n\
  *  WORK    (workspace/output) COMPLEX array, dimension (MAX(1,LWORK))\n\
  *          On exit, if INFO=0, then WORK(1) returns the optimal LWORK.\n\
  *\n\
  *  LWORK   (input) INTEGER\n\
  *          The dimension of the array WORK.  LWORK >= max(1,N).\n\
  *          For optimal performance LWORK >= N*NB, where NB is\n\
  *          the optimal blocksize returned by ILAENV.\n\
  *\n\
  *          If LWORK = -1, then a workspace query is assumed; the routine\n\
  *          only calculates the optimal size of the WORK array, returns\n\
  *          this value as the first entry of the WORK array, and no error\n\
  *          message related to LWORK is issued by XERBLA.\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *          > 0:  if INFO = i, U(i,i) is exactly zero; the matrix is\n\
  *                singular and its inverse could not be computed.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n"
