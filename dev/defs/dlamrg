--- 
:name: dlamrg
:md5sum: 482180fad6debeccfe564bd4a552d6d5
:category: :subroutine
:arguments: 
- n1: 
    :type: integer
    :intent: input
- n2: 
    :type: integer
    :intent: input
- a: 
    :type: doublereal
    :intent: input
    :dims: 
    - n1+n2
- dtrd1: 
    :type: integer
    :intent: input
- dtrd2: 
    :type: integer
    :intent: input
- index: 
    :type: integer
    :intent: output
    :dims: 
    - n1+n2
:substitutions: {}

:fortran_help: "      SUBROUTINE DLAMRG( N1, N2, A, DTRD1, DTRD2, INDEX )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  DLAMRG will create a permutation list which will merge the elements\n\
  *  of A (which is composed of two independently sorted sets) into a\n\
  *  single set which is sorted in ascending order.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  N1     (input) INTEGER\n\
  *  N2     (input) INTEGER\n\
  *         These arguements contain the respective lengths of the two\n\
  *         sorted lists to be merged.\n\
  *\n\
  *  A      (input) DOUBLE PRECISION array, dimension (N1+N2)\n\
  *         The first N1 elements of A contain a list of numbers which\n\
  *         are sorted in either ascending or descending order.  Likewise\n\
  *         for the final N2 elements.\n\
  *\n\
  *  DTRD1  (input) INTEGER\n\
  *  DTRD2  (input) INTEGER\n\
  *         These are the strides to be taken through the array A.\n\
  *         Allowable strides are 1 and -1.  They indicate whether a\n\
  *         subset of A is sorted in ascending (DTRDx = 1) or descending\n\
  *         (DTRDx = -1) order.\n\
  *\n\
  *  INDEX  (output) INTEGER array, dimension (N1+N2)\n\
  *         On exit this array will contain a permutation such that\n\
  *         if B( I ) = A( INDEX( I ) ) for I=1,N1+N2, then B will be\n\
  *         sorted in ascending order.\n\
  *\n\n\
  *  =====================================================================\n\
  *\n\
  *     .. Local Scalars ..\n      INTEGER            I, IND1, IND2, N1SV, N2SV\n\
  *     ..\n"
