--- 
:name: ctptri
:md5sum: 237746a719623b18e0c7de528f689bca
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- diag: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- ap: 
    :type: complex
    :intent: input/output
    :dims: 
    - n*(n+1)/2
- info: 
    :type: integer
    :intent: output
:substitutions: {}

:fortran_help: "      SUBROUTINE CTPTRI( UPLO, DIAG, N, AP, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  CTPTRI computes the inverse of a complex upper or lower triangular\n\
  *  matrix A stored in packed format.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  A is upper triangular;\n\
  *          = 'L':  A is lower triangular.\n\
  *\n\
  *  DIAG    (input) CHARACTER*1\n\
  *          = 'N':  A is non-unit triangular;\n\
  *          = 'U':  A is unit triangular.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  AP      (input/output) COMPLEX array, dimension (N*(N+1)/2)\n\
  *          On entry, the upper or lower triangular matrix A, stored\n\
  *          columnwise in a linear array.  The j-th column of A is stored\n\
  *          in the array AP as follows:\n\
  *          if UPLO = 'U', AP(i + (j-1)*j/2) = A(i,j) for 1<=i<=j;\n\
  *          if UPLO = 'L', AP(i + (j-1)*((2*n-j)/2) = A(i,j) for j<=i<=n.\n\
  *          See below for further details.\n\
  *          On exit, the (triangular) inverse of the original matrix, in\n\
  *          the same packed storage format.\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *          > 0:  if INFO = i, A(i,i) is exactly zero.  The triangular\n\
  *                matrix is singular and its inverse can not be computed.\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  A triangular matrix A can be transferred to packed storage using one\n\
  *  of the following program segments:\n\
  *\n\
  *  UPLO = 'U':                      UPLO = 'L':\n\
  *\n\
  *        JC = 1                           JC = 1\n\
  *        DO 2 J = 1, N                    DO 2 J = 1, N\n\
  *           DO 1 I = 1, J                    DO 1 I = J, N\n\
  *              AP(JC+I-1) = A(I,J)              AP(JC+I-J) = A(I,J)\n\
  *      1    CONTINUE                    1    CONTINUE\n\
  *           JC = JC + J                      JC = JC + N - J + 1\n\
  *      2 CONTINUE                       2 CONTINUE\n\
  *\n\
  *  =====================================================================\n\
  *\n"
