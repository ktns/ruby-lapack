--- 
:name: chptrd
:md5sum: a3029585e3226a50f649c5b9511928e4
:category: :subroutine
:arguments: 
- uplo: 
    :type: char
    :intent: input
- n: 
    :type: integer
    :intent: input
- ap: 
    :type: complex
    :intent: input/output
    :dims: 
    - ldap
- d: 
    :type: real
    :intent: output
    :dims: 
    - n
- e: 
    :type: real
    :intent: output
    :dims: 
    - n-1
- tau: 
    :type: complex
    :intent: output
    :dims: 
    - n-1
- info: 
    :type: integer
    :intent: output
:substitutions: 
  n: ((int)sqrtf(ldap*8+1.0f)-1)/2
:fortran_help: "      SUBROUTINE CHPTRD( UPLO, N, AP, D, E, TAU, INFO )\n\n\
  *  Purpose\n\
  *  =======\n\
  *\n\
  *  CHPTRD reduces a complex Hermitian matrix A stored in packed form to\n\
  *  real symmetric tridiagonal form T by a unitary similarity\n\
  *  transformation: Q**H * A * Q = T.\n\
  *\n\n\
  *  Arguments\n\
  *  =========\n\
  *\n\
  *  UPLO    (input) CHARACTER*1\n\
  *          = 'U':  Upper triangle of A is stored;\n\
  *          = 'L':  Lower triangle of A is stored.\n\
  *\n\
  *  N       (input) INTEGER\n\
  *          The order of the matrix A.  N >= 0.\n\
  *\n\
  *  AP      (input/output) COMPLEX array, dimension (N*(N+1)/2)\n\
  *          On entry, the upper or lower triangle of the Hermitian matrix\n\
  *          A, packed columnwise in a linear array.  The j-th column of A\n\
  *          is stored in the array AP as follows:\n\
  *          if UPLO = 'U', AP(i + (j-1)*j/2) = A(i,j) for 1<=i<=j;\n\
  *          if UPLO = 'L', AP(i + (j-1)*(2*n-j)/2) = A(i,j) for j<=i<=n.\n\
  *          On exit, if UPLO = 'U', the diagonal and first superdiagonal\n\
  *          of A are overwritten by the corresponding elements of the\n\
  *          tridiagonal matrix T, and the elements above the first\n\
  *          superdiagonal, with the array TAU, represent the unitary\n\
  *          matrix Q as a product of elementary reflectors; if UPLO\n\
  *          = 'L', the diagonal and first subdiagonal of A are over-\n\
  *          written by the corresponding elements of the tridiagonal\n\
  *          matrix T, and the elements below the first subdiagonal, with\n\
  *          the array TAU, represent the unitary matrix Q as a product\n\
  *          of elementary reflectors. See Further Details.\n\
  *\n\
  *  D       (output) REAL array, dimension (N)\n\
  *          The diagonal elements of the tridiagonal matrix T:\n\
  *          D(i) = A(i,i).\n\
  *\n\
  *  E       (output) REAL array, dimension (N-1)\n\
  *          The off-diagonal elements of the tridiagonal matrix T:\n\
  *          E(i) = A(i,i+1) if UPLO = 'U', E(i) = A(i+1,i) if UPLO = 'L'.\n\
  *\n\
  *  TAU     (output) COMPLEX array, dimension (N-1)\n\
  *          The scalar factors of the elementary reflectors (see Further\n\
  *          Details).\n\
  *\n\
  *  INFO    (output) INTEGER\n\
  *          = 0:  successful exit\n\
  *          < 0:  if INFO = -i, the i-th argument had an illegal value\n\
  *\n\n\
  *  Further Details\n\
  *  ===============\n\
  *\n\
  *  If UPLO = 'U', the matrix Q is represented as a product of elementary\n\
  *  reflectors\n\
  *\n\
  *     Q = H(n-1) . . . H(2) H(1).\n\
  *\n\
  *  Each H(i) has the form\n\
  *\n\
  *     H(i) = I - tau * v * v'\n\
  *\n\
  *  where tau is a complex scalar, and v is a complex vector with\n\
  *  v(i+1:n) = 0 and v(i) = 1; v(1:i-1) is stored on exit in AP,\n\
  *  overwriting A(1:i-1,i+1), and tau is stored in TAU(i).\n\
  *\n\
  *  If UPLO = 'L', the matrix Q is represented as a product of elementary\n\
  *  reflectors\n\
  *\n\
  *     Q = H(1) H(2) . . . H(n-1).\n\
  *\n\
  *  Each H(i) has the form\n\
  *\n\
  *     H(i) = I - tau * v * v'\n\
  *\n\
  *  where tau is a complex scalar, and v is a complex vector with\n\
  *  v(1:i) = 0 and v(i+1) = 1; v(i+2:n) is stored on exit in AP,\n\
  *  overwriting A(i+2:n,i), and tau is stored in TAU(i).\n\
  *\n\
  *  =====================================================================\n\
  *\n"
